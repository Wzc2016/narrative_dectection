{"ast":null,"code":"var _jsxFileName = \"/home/zecheng3/workspace/narrative_dectection/narrative_detection_frontend/src/components/Realtime/Realtime.jsx\";\nimport React, { Component } from 'react';\nimport { Button, Input } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport GaugeChart from 'react-gauge-chart';\nimport './Realtime.css';\nvar APIUrl = 'http://127.0.0.1:8000/polar_result/';\nconst chartStyle = {\n  width: 500,\n  position: 'relative',\n  margin: 'auto auto'\n};\n\nclass Realtime extends Component {\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      isLoaded: false,\n      value: '',\n      positive: 0,\n      negative: 0,\n      currentTopic: '',\n      neutral: 0,\n      total: 0,\n      beginTime: null,\n      curTime: new Date().toLocaleString()\n    };\n    this.keyPressHandler = this.keyPressHandler.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\n  }\n\n  GetData() {\n    fetch(APIUrl + this.state.currentTopic).then(res => res.json()).then(result => {\n      this.setState({\n        total: this.state.total + 100,\n        positive: this.state.positive + result.positive,\n        negative: this.state.negative + result.negative,\n        neutral: this.state.neutral + result.neutral,\n        curTime: new Date().toLocaleString()\n      });\n      console.log(this.state.total, this.state.positive, this.state.negative, this.state.neutral);\n    });\n  }\n\n  clickHandler() {\n    if (this.state.value.length === 0) {\n      this.setState({\n        currentTopic: ''\n      });\n      return;\n    }\n\n    this.setState({\n      beginTime: new Date().toLocaleString(),\n      currentTopic: this.state.value\n    });\n    setInterval(() => {\n      this.GetData();\n    }, 3000);\n  }\n\n  keyPressHandler(e) {\n    if (e.key != 'Enter') {\n      return;\n    }\n\n    this.clickHandler();\n  }\n\n  inputChangeHandler(e) {\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Realtime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Button.Group, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: process.env.PUBLIC_URL + \"/Realtime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Realtime\")), React.createElement(Button.Or, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: process.env.PUBLIC_URL + \"/Demo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Demo\"))), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Choose a topic!\"), React.createElement(Input, {\n      onKeyPress: this.keyPressHandler,\n      onChange: this.inputChangeHandler,\n      label: \"Search\",\n      placeholder: \"Key word here!\",\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.clickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"GET\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(GaugeChart, {\n      id: \"gaugeChart2\",\n      nrOfLevels: 3,\n      animate: false,\n      percent: (2 * this.state.positive + 1 * this.state.neutral) / (2 * this.state.total),\n      hideText: true,\n      style: chartStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), `From ${this.state.beginTime} to ${this.state.curTime}`);\n  }\n\n}\n\nexport default Realtime;","map":{"version":3,"sources":["/home/zecheng3/workspace/narrative_dectection/narrative_detection_frontend/src/components/Realtime/Realtime.jsx"],"names":["React","Component","Button","Input","Link","GaugeChart","APIUrl","chartStyle","width","position","margin","Realtime","constructor","state","error","isLoaded","value","positive","negative","currentTopic","neutral","total","beginTime","curTime","Date","toLocaleString","keyPressHandler","bind","clickHandler","inputChangeHandler","GetData","fetch","then","res","json","result","setState","console","log","length","setInterval","e","key","target","render","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Input } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport GaugeChart from 'react-gauge-chart'\n\nimport './Realtime.css'\n\nvar APIUrl = 'http://127.0.0.1:8000/polar_result/';\n\nconst chartStyle = {\n  width: 500,\n  position: 'relative',\n  margin: 'auto auto',\n}\n\n\nclass Realtime extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      value: '',\n      positive: 0,\n      negative: 0,\n      currentTopic: '',\n      neutral: 0,\n      total: 0,\n      beginTime: null,\n      curTime : new Date().toLocaleString(),\n    }\n\n    this.keyPressHandler = this.keyPressHandler.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\n\n  }\n\n\n\n  GetData() {\n    fetch(APIUrl + this.state.currentTopic)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          total: this.state.total + 100,\n          positive: this.state.positive + result.positive,\n          negative: this.state.negative + result.negative,\n          neutral: this.state.neutral + result.neutral,\n          curTime: new Date().toLocaleString(),\n        })\n        console.log(this.state.total, this.state.positive, this.state.negative, this.state.neutral);\n      }\n    );\n  }\n\n  clickHandler() {\n    if(this.state.value.length === 0) {\n      this.setState({currentTopic: ''});\n      return;\n    }\n\n    this.setState({\n      beginTime: new Date().toLocaleString(),\n      currentTopic: this.state.value\n    })\n\n    setInterval( () => {\n      this.GetData();\n\n    }, 3000)\n\n  }\n\n\n  keyPressHandler(e) {\n    if(e.key != 'Enter'){\n      return;\n    }\n    this.clickHandler();\n  }\n\n\n  inputChangeHandler(e) {\n    this.setState({ value: e.target.value});\n  }\n\n  render() {\n    return (\n      <div className='Realtime'>\n      <br/>\n      <Button.Group size='large'>\n        <Link to={process.env.PUBLIC_URL + \"/Realtime\"}>\n          <Button>\n            Realtime\n          </Button>\n        </Link>\n        <Button.Or />\n        <Link to={process.env.PUBLIC_URL + \"/Demo\"}>\n          <Button>\n            Demo\n          </Button>\n        </Link>\n      </Button.Group>\n      <h1>Choose a topic!</h1>\n        <Input\n            onKeyPress={this.keyPressHandler}\n            onChange={this.inputChangeHandler}\n            label='Search'\n            placeholder='Key word here!'\n            value={this.state.value}\n          />\n          <Button onClick={this.clickHandler}>\n            GET\n          </Button>\n          <br/>\n          <br/>\n          <GaugeChart id=\"gaugeChart2\" \n            nrOfLevels={3} \n            animate={false}\n            percent={(2 * this.state.positive + 1 * this.state.neutral)/(2 * this.state.total)}\n            hideText={true}\n            style={chartStyle}\n          />\n          <br/>\n\n          {`From ${this.state.beginTime} to ${this.state.curTime}`}\n\n          \n\n      </div>\n    )\n  }\n\n}\n\nexport default Realtime"]},"metadata":{},"sourceType":"module"}