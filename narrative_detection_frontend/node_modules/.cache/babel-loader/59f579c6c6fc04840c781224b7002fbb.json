{"ast":null,"code":"var _jsxFileName = \"/home/zecheng3/workspace/narrative_dectection/narrative_detection_frontend/src/components/Realtime/Realtime.jsx\";\nimport React, { Component } from 'react';\nimport { Button, Input } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport GaugeChart from 'react-gauge-chart';\nimport Thermometer from 'react-thermometer-component';\nimport './Realtime.css';\nvar APIUrl = 'http://127.0.0.1:8000/polar_result/';\n\nconst sleep = milliseconds => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\n};\n\nconst chartStyle = {\n  width: 500,\n  margin: 'auto auto'\n};\nvar idVar;\n\nclass Realtime extends Component {\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      isLoaded: false,\n      value: '',\n      positive: 0,\n      negative: 0,\n      currentTopic: '',\n      neutral: 0,\n      total: 0,\n      beginTime: null,\n      curTime: null,\n      displayTime: false,\n      activity: 0,\n      displayCharts: false,\n      displayLoading: false\n    };\n    this.keyPressHandler = this.keyPressHandler.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\n  }\n\n  GetData() {\n    fetch(APIUrl + this.state.currentTopic).then(res => res.json()).then(result => {\n      this.setState({\n        positive: this.state.positive + result.positive,\n        negative: this.state.negative + result.negative,\n        neutral: this.state.neutral + result.neutral,\n        total: this.state.positive + this.state.negative + this.state.neutral + result.positive + result.negative + result.neutral,\n        curTime: new Date().toLocaleString(),\n        activity: (result.positive + result.negative + result.neutral) / 100.0,\n        displayLoading: false,\n        displayCharts: true\n      }); // console.log(this.state.total, this.state.positive, this.state.negative, this.state.neutral);\n    });\n  }\n\n  clickHandler() {\n    clearInterval(idVar);\n    this.setState({\n      displayLoading: true\n    });\n    sleep(5000).then(() => {\n      if (this.state.value.length === 0) {\n        this.setState({\n          currentTopic: ''\n        });\n        return;\n      }\n\n      this.setState({\n        beginTime: new Date().toLocaleString(),\n        curTime: new Date().toLocaleString(),\n        currentTopic: this.state.value,\n        displayTime: true,\n        positive: 0,\n        negative: 0,\n        neutral: 0,\n        total: 0,\n        activity: 0,\n        displayLoading: true,\n        displayCharts: false\n      });\n      idVar = setInterval(() => {\n        this.GetData();\n      }, 3000);\n    });\n  }\n\n  keyPressHandler(e) {\n    if (e.key != 'Enter') {\n      return;\n    }\n\n    this.clickHandler();\n  }\n\n  inputChangeHandler(e) {\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  render() {\n    var displayTime = {\n      display: this.state.displayTime ? 'block' : 'none'\n    };\n    var displayCharts = {\n      display: this.state.displayCharts ? 'block' : 'none'\n    };\n    var displayLoading = {\n      display: this.state.displayLoading ? 'block' : 'none'\n    };\n    return React.createElement(\"div\", {\n      className: \"Realtime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Button.Group, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: process.env.PUBLIC_URL + \"/Realtime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Realtime\")), React.createElement(Button.Or, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: process.env.PUBLIC_URL + \"/Demo\",\n      onClick: () => {\n        clearInterval(idVar);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Demo\"))), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Choose a topic!\"), React.createElement(Input, {\n      onKeyPress: this.keyPressHandler,\n      onChange: this.inputChangeHandler,\n      label: \"Search\",\n      placeholder: \"Key word here!\",\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.clickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"GET\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: displayLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Loading......(May take a few seconds.)\"), React.createElement(\"div\", {\n      className: \"charts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(GaugeChart, {\n      id: \"gauge-chart1\",\n      nrOfLevels: 2,\n      animate: false,\n      percent: (2 * this.state.positive + 1 * this.state.neutral) / (2 * this.state.total),\n      hideText: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), \"Sentiment\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(GaugeChart, {\n      id: \"gauge-chart2\",\n      nrOfLevels: 1,\n      animate: false,\n      percent: this.state.activity,\n      hideText: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), \"Activity\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"temperature\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Thermometer, {\n      theme: \"light\",\n      value: this.state.activity * 100,\n      max: \"100\",\n      size: \"normal\",\n      height: \"150\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), \"Alert Status\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: displayTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, `From ${this.state.beginTime} to ${this.state.curTime}`), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), `positive: ${this.state.positive}\n            negative: ${this.state.negative}\n            neutral: ${this.state.neutral}\n            total: ${this.state.total}`);\n  }\n\n}\n\nexport default Realtime;","map":{"version":3,"sources":["/home/zecheng3/workspace/narrative_dectection/narrative_detection_frontend/src/components/Realtime/Realtime.jsx"],"names":["React","Component","Button","Input","Link","GaugeChart","Thermometer","APIUrl","sleep","milliseconds","Promise","resolve","setTimeout","chartStyle","width","margin","idVar","Realtime","constructor","state","error","isLoaded","value","positive","negative","currentTopic","neutral","total","beginTime","curTime","displayTime","activity","displayCharts","displayLoading","keyPressHandler","bind","clickHandler","inputChangeHandler","GetData","fetch","then","res","json","result","setState","Date","toLocaleString","clearInterval","length","setInterval","e","key","target","render","display","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Input } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport GaugeChart from 'react-gauge-chart'\nimport Thermometer from 'react-thermometer-component'\n\nimport './Realtime.css'\n\nvar APIUrl = 'http://127.0.0.1:8000/polar_result/';\n\nconst sleep = (milliseconds) => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\n\nconst chartStyle = {\n  width: 500,\n  margin: 'auto auto',\n}\n\nvar idVar;\n\nclass Realtime extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      value: '',\n      positive: 0,\n      negative: 0,\n      currentTopic: '',\n      neutral: 0,\n      total: 0,\n      beginTime: null,\n      curTime : null,\n      displayTime: false,\n      activity: 0,\n      displayCharts: false,\n      displayLoading: false,\n    }\n\n    this.keyPressHandler = this.keyPressHandler.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\n\n  }\n\n\n\n  GetData() {\n    fetch(APIUrl + this.state.currentTopic)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          positive: this.state.positive + result.positive,\n          negative: this.state.negative + result.negative,\n          neutral: this.state.neutral + result.neutral,\n          total: this.state.positive + this.state.negative + this.state.neutral + result.positive + result.negative + result.neutral,\n          curTime: new Date().toLocaleString(),\n          activity:  (result.positive + result.negative + result.neutral) / 100.0,\n\n          displayLoading: false,\n          displayCharts: true,\n        })\n        // console.log(this.state.total, this.state.positive, this.state.negative, this.state.neutral);\n      }\n    );\n  }\n\n  clickHandler() {\n\n    clearInterval(idVar);\n\n    this.setState({\n      displayLoading: true,\n    })\n\n    sleep(5000).then(() => {\n\n\n      if(this.state.value.length === 0) {\n      this.setState({currentTopic: ''});\n      return;\n    }\n\n\n\n    this.setState({\n      beginTime: new Date().toLocaleString(),\n      curTime: new Date().toLocaleString(),\n      currentTopic: this.state.value,\n      displayTime: true,\n      positive: 0,\n      negative: 0,\n      neutral: 0,\n      total: 0,\n      activity: 0,\n      displayLoading: true,\n      displayCharts: false,\n    })\n\n    \n\n      idVar = setInterval( () => {\n        this.GetData();\n      }, 3000)\n\n\n    })\n    \n\n  }\n\n\n  keyPressHandler(e) {\n    if(e.key != 'Enter'){\n      return;\n    }\n    this.clickHandler();\n  }\n\n\n  inputChangeHandler(e) {\n    this.setState({ value: e.target.value});\n  }\n\n  render() {\n    var displayTime = {display: this.state.displayTime ? 'block' : 'none' };\n    var displayCharts = {display: this.state.displayCharts ? 'block' : 'none' }\n    var displayLoading = {display: this.state.displayLoading ? 'block' : 'none' }\n    return (\n      <div className='Realtime'>\n      <br/>\n      <Button.Group size='large'>\n        <Link to={process.env.PUBLIC_URL + \"/Realtime\"}>\n          <Button>\n            Realtime\n          </Button>\n        </Link>\n        <Button.Or />\n        <Link to={process.env.PUBLIC_URL + \"/Demo\"} onClick={() => {clearInterval(idVar); }}>\n          <Button>\n            Demo\n          </Button>\n        </Link>\n      </Button.Group>\n      <h1>Choose a topic!</h1>\n        <Input\n            onKeyPress={this.keyPressHandler}\n            onChange={this.inputChangeHandler}\n            label='Search'\n            placeholder='Key word here!'\n            value={this.state.value}\n          />\n          <Button onClick={this.clickHandler}>\n            GET\n          </Button>\n          <br/>\n          <br/>\n          <div style={displayLoading}>\n            Loading......(May take a few seconds.)\n          </div>\n\n            <div className='charts'>\n                  <div>\n                    <GaugeChart id=\"gauge-chart1\" \n                      nrOfLevels={2} \n                      animate={false}\n                      percent={(2 * this.state.positive + 1 * this.state.neutral)/(2 * this.state.total)}\n                      hideText={true}\n                    />\n                    Sentiment\n                  </div>\n                  <div>\n                    <GaugeChart id=\"gauge-chart2\" \n                      nrOfLevels={1} \n                      animate={false}\n                      percent={this.state.activity}\n                      hideText={true}\n                    />\n                    Activity\n                </div>\n                  <div>\n\n                    <div className='temperature'>\n                      <Thermometer\n                          theme=\"light\"\n                          value={this.state.activity * 100}\n                          max=\"100\"\n                          size=\"normal\"\n                          height=\"150\"\n                        />\n                      </div>\n                    <br/>\n                      Alert Status\n                    </div>\n                  </div>\n          <br/>\n\n          \n          <div style={displayTime}>\n            {`From ${this.state.beginTime} to ${this.state.curTime}`}\n          </div>\n\n          <br/>\n          {`positive: ${this.state.positive}\n            negative: ${this.state.negative}\n            neutral: ${this.state.neutral}\n            total: ${this.state.total}`}\n          \n\n      </div>\n    )\n  }\n\n}\n\nexport default Realtime"]},"metadata":{},"sourceType":"module"}