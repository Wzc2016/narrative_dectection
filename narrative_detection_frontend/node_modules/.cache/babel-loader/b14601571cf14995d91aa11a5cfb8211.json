{"ast":null,"code":"var _jsxFileName = \"/home/zecheng3/workspace/narrative_dectection/narrative_detection_frontend/src/components/Demo/Demo.jsx\";\nimport React from \"react\";\nimport Sidebar from \"react-sidebar\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { ResponsiveLine } from '@nivo/line';\nimport { ResponsiveBar } from '@nivo/bar';\nimport { ResponsivePieCanvas } from '@nivo/pie';\nimport './Demo.css';\nimport GaugeChart from 'react-gauge-chart';\nimport Thermometer from 'react-thermometer-component';\nimport Slider, { Range } from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nvar API = 'http://127.0.0.1:8000/polar_result/demo/';\nvar beginDate = '01242020';\nvar endDate = '02162020';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeTitle = title => {\n      this.setState({\n        currentTopic: title,\n        sidebarOpen: false\n      });\n    };\n\n    this.changeColor = number => {\n      this.setState({\n        selected: number\n      });\n    };\n\n    this.myColor = position => {\n      if (this.state.selected === position) {\n        return \"grey\";\n      }\n\n      return \"\";\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      sidebarOpen: true,\n      selected: 0,\n      currentTopic: \"ACFT\",\n      positive: 0,\n      negative: 0,\n      neutral: 0,\n      total: 0,\n      threshold: 100,\n      date: '',\n      dayChange: 0,\n      sliderVal: 1\n    };\n    this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\n    this.sliderHandler = this.sliderHandler.bind(this);\n    this.sliderTxtHandler = this.sliderTxtHandler.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(API + this.state.currentTopic + '/' + endDate).then(res => res.json()).then(result => {\n      this.setState({\n        dayChange: result.positive + result.negative + result.neutral\n      });\n      console.log(result);\n    });\n    fetch(API + this.state.currentTopic + '/' + beginDate + '/' + endDate).then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        positive: result.positive,\n        negative: result.negative,\n        neutral: result.neutral,\n        total: result.positive + result.negative + result.neutral\n      });\n      console.log(result);\n    });\n  }\n\n  sliderTxtHandler(e) {}\n\n  sliderHandler(e) {\n    console.log(e);\n    this.setState({\n      isLoaded: false,\n      sliderVal: e\n    });\n\n    if (e < 9) {\n      endDate = '01' + (23 + e).toString() + '2020';\n    } else if (e < 18) {\n      endDate = '020' + (e - 8).toString() + '2020';\n    } else {\n      endDate = '02' + (e - 8).toString() + '2020';\n    }\n\n    this.componentDidMount();\n  }\n\n  dateParser(date) {\n    return date.slice(0, 2) + '-' + date.slice(2, 4) + '-' + date.slice(4, 8);\n  }\n\n  onSetSidebarOpen(open) {\n    this.setState({\n      sidebarOpen: open\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded\n    } = this.state;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, this.state.currentTopic), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, 'From ' + this.dateParser(beginDate) + ' to ' + this.dateParser(endDate)), React.createElement(\"div\", {\n        className: \"date-slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Slider, {\n        className: \"slider\",\n        ariaLabelForHandle: \"hello\",\n        ariaLabelledByForHandle: \"hello\",\n        ariaValueTextFormatterForHandle: this.sliderTxtHandler,\n        onAfterChange: this.sliderHandler,\n        max: 24,\n        min: 1,\n        defaultValue: this.state.sliderVal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"charts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(GaugeChart, {\n        id: \"gauge-chart1\",\n        nrOfLevels: 2,\n        animate: false,\n        percent: (2 * this.state.positive + 1 * this.state.neutral) / (2 * this.state.total),\n        hideText: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), \"Sentiment\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(GaugeChart, {\n        id: \"gauge-chart2\",\n        nrOfLevels: 1,\n        animate: false,\n        percent: Math.min(this.state.dayChange / this.state.threshold, 1),\n        hideText: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), \"Activity\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"temperature\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Thermometer, {\n        theme: \"light\",\n        value: Math.min(this.state.dayChange, 100).toString(),\n        max: \"100\",\n        size: \"normal\",\n        height: \"150\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), \"Alert Status\")));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/zecheng3/workspace/narrative_dectection/narrative_detection_frontend/src/components/Demo/Demo.jsx"],"names":["React","Sidebar","Container","Row","Col","ResponsiveLine","ResponsiveBar","ResponsivePieCanvas","GaugeChart","Thermometer","Slider","Range","API","beginDate","endDate","App","Component","constructor","props","changeTitle","title","setState","currentTopic","sidebarOpen","changeColor","number","selected","myColor","position","state","error","isLoaded","positive","negative","neutral","total","threshold","date","dayChange","sliderVal","onSetSidebarOpen","bind","sliderHandler","sliderTxtHandler","componentDidMount","fetch","then","res","json","result","console","log","e","toString","dateParser","slice","open","render","message","Math","min"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Sidebar from \"react-sidebar\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { ResponsiveLine } from '@nivo/line'\nimport { ResponsiveBar } from '@nivo/bar'\nimport { ResponsivePieCanvas } from '@nivo/pie'\nimport './Demo.css'\nimport GaugeChart from 'react-gauge-chart'\nimport Thermometer from 'react-thermometer-component'\nimport Slider, { Range } from 'rc-slider'; \nimport 'rc-slider/assets/index.css';\n\n\nvar API = 'http://127.0.0.1:8000/polar_result/demo/';\nvar beginDate = '01242020';\nvar endDate = '02162020';\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \terror: null,\n    \tisLoaded: false,\n    \tsidebarOpen: true,\n        selected: 0,\n    \tcurrentTopic:\"ACFT\",\n    \tpositive: 0,\n    \tnegative: 0,\n    \tneutral: 0,\n    \ttotal: 0,\n    \tthreshold: 100,\n    \tdate: '',\n    \tdayChange: 0,\n    \tsliderVal: 1,\n    };\n    this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\n    this.sliderHandler = this.sliderHandler.bind(this);\n    this.sliderTxtHandler = this.sliderTxtHandler.bind(this);\n  }\n\n  componentDidMount() {\n  \tfetch(API + this.state.currentTopic + '/' + endDate)\n  \t.then(res => res.json())\n  \t.then(\n  \t\t(result) => {\n  \t\t\tthis.setState({\n  \t\t\t\tdayChange: result.positive + result.negative + result.neutral,\n  \t\t\t})\n  \t\t\tconsole.log(result);\n  \t\t}\n  \t);\n  \tfetch(API + this.state.currentTopic + '/' + beginDate + '/' + endDate)\n  \t.then(res => res.json())\n  \t.then(\n  \t\t(result) => {\n  \t\t\tthis.setState({\n  \t\t\t\tisLoaded: true,\n  \t\t\t\tpositive: result.positive,\n  \t\t\t\tnegative: result.negative,\n  \t\t\t\tneutral: result.neutral,\n  \t\t\t\ttotal: result.positive + result.negative + result.neutral,\n  \t\t\t})\n  \t\t\tconsole.log(result);\n  \t\t}\n\n  \t);\n  }\n\n  sliderTxtHandler(e) {\n\n  }\n\n  sliderHandler(e) {\n  \tconsole.log(e);\n  \tthis.setState({\n  \t\tisLoaded: false,\n  \t\tsliderVal: e,\n  \t})\n  \tif(e < 9) {\n  \t\tendDate = '01' + (23 + e).toString() + '2020';\n  \t} else if(e < 18){\n  \t\tendDate = '020' + (e - 8).toString() + '2020';\n  \t} else {\n  \t\tendDate = '02' + (e - 8).toString() + '2020';\n  \t}\n  \tthis.componentDidMount();\n  }\n\n  dateParser(date) {\n  \treturn date.slice(0, 2) + '-' + date.slice(2, 4) + '-' + date.slice(4,8);\n  }\n\n  onSetSidebarOpen(open) {\n    this.setState({ sidebarOpen: open });\n  }\n\n    changeTitle = (title) => {\n        this.setState(\n            { currentTopic: title,\n                sidebarOpen: false }\n            );\n    }\n\n    changeColor = (number) => {\n        this.setState(\n            { selected: number}\n        );\n    }\n\n    myColor =(position) => {\n        if (this.state.selected === position) {\n            return \"grey\";\n        }\n        return \"\";\n    }\n\n  render() {\n  \tconst { error, isLoaded} = this.state;\n  \t if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n\t    return (\n\t        \t<div className='display'>\n\t            <h1>\n\t                {this.state.currentTopic}\n\t            </h1>\n\t            <h2>\n\t            \t{'From ' + this.dateParser(beginDate) + ' to ' + this.dateParser(endDate)}\n\t            </h2>\n\t            <div className='date-slider'>\n\t            \t<Slider className='slider'\n\t            \tariaLabelForHandle='hello'\n\t            \tariaLabelledByForHandle='hello'\n\t            \tariaValueTextFormatterForHandle={this.sliderTxtHandler}\n\t            \tonAfterChange={this.sliderHandler}\n\t            \tmax={24}\n\t            \tmin={1}\n\t            \tdefaultValue={this.state.sliderVal}/>\n\t            </div>\n\t            <div className='charts'>\n\t            \t<div>\n\t\t\t            <GaugeChart id=\"gauge-chart1\" \n\t\t\t              nrOfLevels={2} \n\t\t\t              animate={false}\n\t\t\t              percent={(2 * this.state.positive + 1 * this.state.neutral)/(2 * this.state.total)}\n\t\t\t           \t  hideText={true}\n\t\t\t            />\n\t\t\t            Sentiment\n\t\t            </div>\n\t\t            <div>\n\t\t\t            <GaugeChart id=\"gauge-chart2\" \n\t\t\t              nrOfLevels={1} \n\t\t\t              animate={false}\n\t\t\t              percent={Math.min(this.state.dayChange/this.state.threshold, 1)}\n\t\t\t              hideText={true}\n\t\t\t            />\n\t\t\t            Activity\n\t\t\t        </div>\n\t\t            <div>\n\n\t\t\t            <div className='temperature'>\n\t\t\t\t            <Thermometer\n\t\t\t\t\t\t\t  theme=\"light\"\n\t\t\t\t\t\t\t  value={Math.min(this.state.dayChange, 100).toString()}\n\t\t\t\t\t\t\t  max=\"100\"\n\t\t\t\t\t\t\t  size=\"normal\"\n\t\t\t\t\t\t\t  height=\"150\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\tAlert Status\n\t\t\t\t\t</div>\n\t            </div>\n\n\t            \n\t        </div>\n\t    );\n\t  }\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}