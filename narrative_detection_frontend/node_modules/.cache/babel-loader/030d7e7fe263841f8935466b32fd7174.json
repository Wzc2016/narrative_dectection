{"ast":null,"code":"var _jsxFileName = \"/home/zecheng3/workspace/narrative_dectection/narrative_detection_frontend/src/components/Realtime/Realtime.jsx\";\nimport React, { Component } from 'react';\nimport { Button, Input } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport GaugeChart from 'react-gauge-chart';\nimport Thermometer from 'react-thermometer-component';\nimport './Realtime.css';\nvar APIUrl = 'http://127.0.0.1:8000/polar_result/';\nconst chartStyle = {\n  width: 500,\n  margin: 'auto auto'\n};\nvar idVar;\n\nclass Realtime extends Component {\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      isLoaded: false,\n      value: '',\n      positive: 0,\n      negative: 0,\n      currentTopic: '',\n      neutral: 0,\n      total: 0,\n      beginTime: null,\n      curTime: new Date().toLocaleString(),\n      displayTime: false,\n      activity: 0\n    };\n    this.keyPressHandler = this.keyPressHandler.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\n  }\n\n  GetData() {\n    fetch(APIUrl + this.state.currentTopic).then(res => res.json()).then(result => {\n      this.setState({\n        positive: this.state.positive + result.positive,\n        negative: this.state.negative + result.negative,\n        neutral: this.state.neutral + result.neutral,\n        total: this.state.positive + this.state.negative + this.state.neutral + result.positive + result.negative + result.neutral,\n        curTime: new Date().toLocaleString(),\n        activity: (result.positive + result.negative + result.neutral) / 100.0\n      });\n      console.log(this.state.total, this.state.positive, this.state.negative, this.state.neutral);\n    });\n  }\n\n  clickHandler() {\n    if (this.state.value.length === 0) {\n      this.setState({\n        currentTopic: ''\n      });\n      return;\n    }\n\n    this.setState({\n      beginTime: new Date().toLocaleString(),\n      currentTopic: this.state.value,\n      displayTime: true,\n      positive: 0,\n      negative: 0,\n      neutral: 0,\n      total: 0\n    });\n    clearInterval(idVar);\n    sleep(500).then(() => {\n      idVar = setInterval(() => {\n        this.GetData();\n      }, 3000);\n    });\n  }\n\n  keyPressHandler(e) {\n    if (e.key != 'Enter') {\n      return;\n    }\n\n    this.clickHandler();\n  }\n\n  inputChangeHandler(e) {\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  render() {\n    var displayTime = {\n      display: this.state.displayTime ? 'block' : 'none'\n    };\n    return React.createElement(\"div\", {\n      className: \"Realtime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Button.Group, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: process.env.PUBLIC_URL + \"/Realtime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Realtime\")), React.createElement(Button.Or, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: process.env.PUBLIC_URL + \"/Demo\",\n      onClick: () => {\n        clearInterval(idVar);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Demo\"))), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Choose a topic!\"), React.createElement(Input, {\n      onKeyPress: this.keyPressHandler,\n      onChange: this.inputChangeHandler,\n      label: \"Search\",\n      placeholder: \"Key word here!\",\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.clickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"GET\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"charts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(GaugeChart, {\n      id: \"gauge-chart1\",\n      nrOfLevels: 2,\n      animate: false,\n      percent: (2 * this.state.positive + 1 * this.state.neutral) / (2 * this.state.total),\n      hideText: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), \"Sentiment\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(GaugeChart, {\n      id: \"gauge-chart2\",\n      nrOfLevels: 1,\n      animate: false,\n      percent: this.state.activity,\n      hideText: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), \"Activity\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"temperature\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Thermometer, {\n      theme: \"light\",\n      value: this.state.activity * 100,\n      max: \"100\",\n      size: \"normal\",\n      height: \"150\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), \"Alert Status\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: displayTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, `From ${this.state.beginTime} to ${this.state.curTime}`), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), `positive: ${this.state.positive}\n            negative: ${this.state.negative}\n            neutral: ${this.state.neutral}\n            total: ${this.state.total}`);\n  }\n\n}\n\nexport default Realtime;","map":{"version":3,"sources":["/home/zecheng3/workspace/narrative_dectection/narrative_detection_frontend/src/components/Realtime/Realtime.jsx"],"names":["React","Component","Button","Input","Link","GaugeChart","Thermometer","APIUrl","chartStyle","width","margin","idVar","Realtime","constructor","state","error","isLoaded","value","positive","negative","currentTopic","neutral","total","beginTime","curTime","Date","toLocaleString","displayTime","activity","keyPressHandler","bind","clickHandler","inputChangeHandler","GetData","fetch","then","res","json","result","setState","console","log","length","clearInterval","sleep","setInterval","e","key","target","render","display","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Input } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport GaugeChart from 'react-gauge-chart'\nimport Thermometer from 'react-thermometer-component'\n\nimport './Realtime.css'\n\nvar APIUrl = 'http://127.0.0.1:8000/polar_result/';\n\nconst chartStyle = {\n  width: 500,\n  margin: 'auto auto',\n}\n\nvar idVar;\n\nclass Realtime extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      value: '',\n      positive: 0,\n      negative: 0,\n      currentTopic: '',\n      neutral: 0,\n      total: 0,\n      beginTime: null,\n      curTime : new Date().toLocaleString(),\n      displayTime: false,\n      activity: 0,\n    }\n\n    this.keyPressHandler = this.keyPressHandler.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n    this.inputChangeHandler = this.inputChangeHandler.bind(this);\n\n  }\n\n\n\n  GetData() {\n    fetch(APIUrl + this.state.currentTopic)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          positive: this.state.positive + result.positive,\n          negative: this.state.negative + result.negative,\n          neutral: this.state.neutral + result.neutral,\n          total: this.state.positive + this.state.negative + this.state.neutral + result.positive + result.negative + result.neutral,\n          curTime: new Date().toLocaleString(),\n          activity:  (result.positive + result.negative + result.neutral) / 100.0,\n        })\n        console.log(this.state.total, this.state.positive, this.state.negative, this.state.neutral);\n      }\n    );\n  }\n\n  clickHandler() {\n    if(this.state.value.length === 0) {\n      this.setState({currentTopic: ''});\n      return;\n    }\n\n    this.setState({\n      beginTime: new Date().toLocaleString(),\n      currentTopic: this.state.value,\n      displayTime: true,\n      positive: 0,\n      negative: 0,\n      neutral: 0,\n      total: 0,\n    })\n\n    clearInterval(idVar);\n\n    sleep(500).then(() => {\n      idVar = setInterval( () => {\n        this.GetData();\n      }, 3000)\n    })\n\n    \n\n  }\n\n\n  keyPressHandler(e) {\n    if(e.key != 'Enter'){\n      return;\n    }\n    this.clickHandler();\n  }\n\n\n  inputChangeHandler(e) {\n    this.setState({ value: e.target.value});\n  }\n\n  render() {\n    var displayTime = {display: this.state.displayTime ? 'block' : 'none' };\n    \n    return (\n      <div className='Realtime'>\n      <br/>\n      <Button.Group size='large'>\n        <Link to={process.env.PUBLIC_URL + \"/Realtime\"}>\n          <Button>\n            Realtime\n          </Button>\n        </Link>\n        <Button.Or />\n        <Link to={process.env.PUBLIC_URL + \"/Demo\"} onClick={() => {clearInterval(idVar); }}>\n          <Button>\n            Demo\n          </Button>\n        </Link>\n      </Button.Group>\n      <h1>Choose a topic!</h1>\n        <Input\n            onKeyPress={this.keyPressHandler}\n            onChange={this.inputChangeHandler}\n            label='Search'\n            placeholder='Key word here!'\n            value={this.state.value}\n          />\n          <Button onClick={this.clickHandler}>\n            GET\n          </Button>\n          <br/>\n          <br/>\n          <div className='charts'>\n                <div>\n                  <GaugeChart id=\"gauge-chart1\" \n                    nrOfLevels={2} \n                    animate={false}\n                    percent={(2 * this.state.positive + 1 * this.state.neutral)/(2 * this.state.total)}\n                    hideText={true}\n                  />\n                  Sentiment\n                </div>\n                <div>\n                  <GaugeChart id=\"gauge-chart2\" \n                    nrOfLevels={1} \n                    animate={false}\n                    percent={this.state.activity}\n                    hideText={true}\n                  />\n                  Activity\n              </div>\n                <div>\n\n                  <div className='temperature'>\n                    <Thermometer\n                        theme=\"light\"\n                        value={this.state.activity * 100}\n                        max=\"100\"\n                        size=\"normal\"\n                        height=\"150\"\n                      />\n                    </div>\n                  <br/>\n                    Alert Status\n                  </div>\n                  </div>\n          <br/>\n\n          \n          <div style={displayTime}>\n            {`From ${this.state.beginTime} to ${this.state.curTime}`}\n          </div>\n\n          <br/>\n          {`positive: ${this.state.positive}\n            negative: ${this.state.negative}\n            neutral: ${this.state.neutral}\n            total: ${this.state.total}`}\n          \n\n      </div>\n    )\n  }\n\n}\n\nexport default Realtime"]},"metadata":{},"sourceType":"module"}