{"ast":null,"code":"var _jsxFileName = \"/home/zecheng3/workspace/narrative_dectection/narrative_detection_frontend/src/components/Demo/Demo.jsx\";\nimport React from \"react\";\nimport Sidebar from \"react-sidebar\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { ResponsiveLine } from '@nivo/line';\nimport { ResponsiveBar } from '@nivo/bar';\nimport { ResponsivePieCanvas } from '@nivo/pie';\nimport './Demo.css';\nimport GaugeChart from 'react-gauge-chart';\nimport Thermometer from 'react-thermometer-component';\nimport Slider from '@material-ui/core/Slider';\nimport { Select, Button, Input, Dropdown, Table, Label } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport 'katex/dist/katex.min.css';\nimport Latex from 'react-latex-next';\nimport { ordinalSuffixOf } from 'ordinal-suffix-of';\nimport Typography from '@material-ui/core/Typography'; // var APIUrl_get_all_topics = 'http://apollo5.cs.illinois.edu:8000/get_all_topics';\n// var APIUrl_get_all_topics = 'http://apollo5.cs.illinois.edu:8000/get_all_topics';\n// var APIUrl_get_daily_sample = 'http://apollo5.cs.illinois.edu:8000/get_daily_sample';\n// var APIUrl_get_result = 'http://apollo5.cs.illinois.edu:8000/get_result/';\n// var APIUrl_delete = 'http://apollo5.cs.illinois.edu:8000/delete/';\n// var APIUrl_stop_update = 'http://apollo5.cs.illinois.edu:8000/stop_update/';\n// var APIUrl_resume_update = 'http://apollo5.cs.illinois.edu:8000/resume_update/';\n\nvar APIUrl_get_all_topics = 'http://127.0.0.1:8000/get_all_topics';\nvar APIUrl_get_daily_sample = 'http://127.0.0.1:8000/get_daily_sample';\nvar APIUrl_get_result = 'http://127.0.0.1:8000/get_result/';\nvar APIUrl_delete = 'http://127.0.0.1:8000/delete/';\nvar APIUrl_stop_update = 'http://127.0.0.1:8000/stop_update/';\nvar APIUrl_resume_update = 'http://127.0.0.1:8000/resume_update/';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      topics: [],\n      topicOptions: [],\n      curr_topic: '',\n      sliderVal: 1,\n      samples: [],\n      neutral_list: [],\n      positive_list: [],\n      negative_list: [],\n      total_list: [],\n      polar: 0,\n      acc_polar: 0,\n      acc_positive: 0,\n      acc_negative: 0,\n      acc_neutral: 0,\n      acc_total: 0,\n      begin_date: 'Loading...',\n      display_charts: false,\n      number_of_days: 0,\n      curr_attitude: 'positive',\n      number_of_samples: 0,\n      stopped: false,\n      errorMsg: '',\n      chartSliderVal: [1, 1],\n      op_dict: {}\n    };\n    this.sliderHandler = this.sliderHandler.bind(this);\n    this.sliderTxtHandler = this.sliderTxtHandler.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(APIUrl_get_all_topics).then(res => res.json()).then(result => {\n      this.setState({\n        topics: result.data,\n        topicOptions: result.data.map(e => {\n          return {\n            text: e.split(\"_\").join(\" \")\n          };\n        })\n      });\n    });\n  }\n\n  inputChangeHandler(e, v) {\n    this.setState({\n      number_of_samples: v.value\n    }, () => {\n      this.get_samples();\n    });\n  }\n\n  attitudeChangeHandler(e, v) {\n    this.setState({\n      curr_attitude: v.value\n    }, () => {\n      this.get_samples();\n    });\n  }\n\n  get_samples() {\n    if (this.state.number_of_samples == NaN) {\n      this.setState({\n        samples: [],\n        errorMsg: 'Please input an integer between 1-30.'\n      });\n      return;\n    }\n\n    if (this.state.number_of_samples == 0) {\n      this.setState({\n        samples: []\n      });\n      return;\n    }\n\n    if (this.state.number_of_samples > 30 || this.state.number_of_samples < 1) {\n      this.setState({\n        samples: [],\n        errorMsg: 'Please input an integer between 1-30.'\n      });\n      return;\n    }\n\n    fetch(APIUrl_get_daily_sample + '/' + this.state.curr_topic + '/' + this.state.number_of_samples).then(res => res.json()).then(result => {\n      var temp = this.state.op_dict;\n\n      if (!(this.state.curr_topic in temp)) {\n        temp[this.state.curr_topic] = {};\n      }\n\n      temp[this.state.curr_topic]['curr_attitude'] = this.state.curr_attitude;\n      temp[this.state.curr_topic]['number_of_samples'] = this.state.number_of_samples;\n      console.log(result.data, this.state.sliderVal, this.state.curr_attitude, this.state.number_of_samples);\n      this.setState({\n        op_dict: temp,\n        samples: result.data[this.state.sliderVal - 1][this.state.curr_attitude]\n      }); // console.log(result.data[this.state.sliderVal - 1][this.state.curr_attitude]);\n    });\n  }\n\n  sliderHandler(e, value) {\n    this.setState({\n      sliderVal: value\n    }); // console.log(value);\n\n    if (this.state.curr_topic == '') {\n      return;\n    }\n\n    fetch(APIUrl_get_daily_sample + '/' + this.state.curr_topic + '/' + parseInt(this.state.number_of_samples)).then(res => res.json()).then(result => {\n      var temp = this.state.op_dict;\n\n      if (!(this.state.curr_topic in temp)) {\n        temp[this.state.curr_topic] = {};\n      }\n\n      temp[this.state.curr_topic]['sliderVal'] = value; // console.log(temp);\n\n      this.setState({\n        op_dict: temp,\n        samples: result.data[value - 1][this.state.curr_attitude]\n      });\n    });\n  }\n\n  sliderTxtHandler(e) {}\n\n  fetch_sample_data(topic) {\n    fetch(APIUrl_get_daily_sample + '/' + topic + '/3').then(res => res.json()).then(result => {\n      // console.log(result.data.length , this.state.sliderVal)\n      this.setState({\n        number_of_days: result.data.length,\n        chartSliderVal: [1, result.data.length]\n      });\n    });\n  }\n\n  delete_handler(e) {\n    fetch(APIUrl_delete + this.state.curr_topic, {\n      method: 'DELETE'\n    });\n    window.location.reload(true);\n  }\n\n  stop_handler(e) {\n    if (this.state.stopped) {\n      fetch(APIUrl_resume_update + this.state.curr_topic, {\n        method: 'PUT'\n      });\n      this.setState({\n        stopped: false\n      });\n    } else {\n      fetch(APIUrl_stop_update + this.state.curr_topic, {\n        method: 'PUT'\n      });\n      this.setState({\n        stopped: true\n      });\n    }\n  }\n\n  chartSliderChangeHandler(e, value) {\n    this.setState({\n      chartSliderVal: value\n    }); // console.log(value);\n\n    fetch(APIUrl_get_result + this.state.curr_topic + '/' + parseInt(value[0]) + '/' + parseInt(value[1])).then(res => res.json()).then(result => {\n      // console.log(result.data.length , this.state.sliderVal)\n      this.setState({\n        positive_list: result.data.positive,\n        neutral_list: result.data.neutral,\n        negative_list: result.data.negative,\n        total_list: result.data.total,\n        polar: result.data.polar,\n        begin_date: result.start_time,\n        display_charts: true,\n        stopped: result.pause\n      });\n    });\n  }\n\n  changeHandler(e, {\n    value\n  }) {\n    this.setState({\n      curr_topic: value\n    });\n    this.fetch_sample_data(value);\n    fetch(APIUrl_get_result + value).then(res => res.json()).then(result => {\n      // console.log(result.data.length , this.state.sliderVal)\n      // console.log(result.data.polar[result.data.polar.length - 1])\n      if (value in this.state.op_dict) {\n        var number_of_samples = this.state.op_dict[value]['number_of_samples'];\n        var curr_attitude = this.state.op_dict[value]['curr_attitude'];\n        var sliderVal = this.state.op_dict[value]['sliderVal'];\n      } else {\n        var number_of_samples = 0;\n        var curr_attitude = 'positive';\n        var sliderVal = 1;\n      }\n\n      this.setState({\n        positive_list: result.data.positive,\n        neutral_list: result.data.neutral,\n        negative_list: result.data.negative,\n        total_list: result.data.total,\n        polar: result.data.polar,\n        acc_polar: result.data.polar[result.data.polar.length - 1],\n        acc_positive: result.data.positive[result.data.positive.length - 1],\n        acc_negative: result.data.negative[result.data.negative.length - 1],\n        acc_neutral: result.data.neutral[result.data.neutral.length - 1],\n        acc_total: result.data.total[result.data.total.length - 1],\n        begin_date: result.start_time,\n        display_charts: true,\n        stopped: result.pause,\n        curr_topic: value,\n        number_of_samples: number_of_samples,\n        curr_attitude: curr_attitude,\n        sliderVal: sliderVal\n      }, () => {\n        this.get_samples();\n      });\n    });\n  }\n\n  render() {\n    // console.log(this.statestopped);\n    // console.log(this.state.chartSliderVal)\n    const buttonString = this.state.stopped ? \"Resume\" : \"Stop\";\n    const activityOptions = {\n      title: {\n        text: 'Activity by Hours'\n      },\n      subtitle: {\n        text: 'Source: Twitter'\n      },\n      yAxis: {\n        title: {\n          text: 'Number of Posts'\n        }\n      },\n      xAxis: {\n        title: {\n          text: 'From ' + this.state.begin_date + ' (Hours)'\n        }\n      },\n      legend: {\n        layout: 'vertical',\n        align: 'right',\n        verticalAlign: 'middle'\n      },\n      credits: {\n        enabled: false\n      },\n      plotOptions: {\n        series: {\n          label: {\n            connectorAllowed: false\n          },\n          pointStart: 0\n        }\n      },\n      series: [{\n        name: 'Positive',\n        data: this.state.positive_list\n      }, {\n        name: 'Neutral',\n        data: this.state.neutral_list\n      }, {\n        name: 'Negative',\n        data: this.state.negative_list\n      }],\n      responsive: {\n        rules: [{\n          condition: {\n            maxWidth: 500\n          },\n          chartOptions: {\n            legend: {\n              layout: 'horizontal',\n              align: 'center',\n              verticalAlign: 'bottom'\n            }\n          }\n        }]\n      }\n    };\n    const sentimentOptions = {\n      chart: {\n        type: 'area'\n      },\n      title: {\n        text: 'Sentiment Distribution by Hours'\n      },\n      subtitle: {\n        text: 'Source: Twitter'\n      },\n      xAxis: {\n        title: {\n          text: 'From ' + this.state.begin_date + ' (Hours)'\n        }\n      },\n      yAxis: {\n        labels: {\n          format: '{value}%'\n        },\n        title: {\n          text: 'Sentiment Ratio'\n        }\n      },\n      legend: {\n        layout: 'vertical',\n        align: 'right',\n        verticalAlign: 'middle'\n      },\n      credits: {\n        enabled: false\n      },\n      tooltip: {\n        pointFormat: '<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.percentage:.1f}%</b> ({point.y:,.0f})<br/>',\n        split: true\n      },\n      plotOptions: {\n        area: {\n          stacking: 'percent',\n          lineColor: '#ffffff',\n          lineWidth: 1,\n          marker: {\n            lineWidth: 1,\n            lineColor: '#ffffff'\n          },\n          accessibility: {\n            pointDescriptionFormatter: function (point) {\n              function round(x) {\n                return Math.round(x * 100) / 100;\n              }\n\n              return point.index + 1 + ', ' + point.category + ', ' + point.y + ' millions, ' + round(point.percentage) + '%, ' + point.series.name;\n            }\n          }\n        }\n      },\n      series: [{\n        name: 'Positive',\n        data: this.state.positive_list\n      }, {\n        name: 'Neutral',\n        data: this.state.neutral_list\n      }, {\n        name: 'Negative',\n        data: this.state.negative_list\n      }]\n    };\n    const LaTeX = 'We calculate the $Support$ $Rate$ by formula $(2$ $\\\\times$ $#Positive$ $+$ $#Neutral$)$/$ (2 $\\\\times$ #Total)';\n    const {\n      error,\n      isLoaded\n    } = this.state;\n    const topicOptions = this.state.topics.map(e => {\n      return {\n        text: e.split(\"_\").join(\" \"),\n        key: e,\n        value: e\n      };\n    });\n    const attitudeOptions = [{\n      text: 'Positive',\n      key: 'positive',\n      value: 'positive'\n    }, {\n      text: 'Neutral',\n      key: 'neutral',\n      value: 'neutral'\n    }, {\n      text: 'Negative',\n      key: 'negative',\n      value: 'negative'\n    }];\n    const numberOptions = [...Array(31).keys()].map(e => {\n      return {\n        text: e.toString(10),\n        key: e,\n        value: e\n      };\n    });\n    console.log(numberOptions);\n    const marks = [{\n      value: 1,\n      label: '1st Day (' + this.state.begin_date + ')'\n    }, {\n      value: this.state.number_of_days,\n      label: ordinalSuffixOf(this.state.number_of_days) + ' Day'\n    }];\n    const samples = this.state.samples.map(e => React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, e['text'], React.createElement(\"a\", {\n      href: e['url'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, \" [Link]\"))));\n    const TableExampleDefinition = this.state.samples.length > 0 ? React.createElement(Table, {\n      celled: true,\n      structured: true,\n      className: \"tweet_table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, \"Sample Tweets\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, samples)) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, this.state.errorMsg); // console.log(this.state.acc_polar)\n\n    var display_charts = {\n      display: this.state.display_charts ? 'block' : 'none'\n    };\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (isLoaded) {\n      return React.createElement(\"div\", {\n        className: \"display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 517\n        },\n        __self: this\n      }), React.createElement(Button.Group, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: process.env.PUBLIC_URL + \"/Search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }, \"Search\")), React.createElement(Button.Or, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: process.env.PUBLIC_URL + \"/Archive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, \"Archive\"))), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        },\n        __self: this\n      }, \"Choose a topic!\"), React.createElement(Dropdown, {\n        placeholder: \"Select Topic\",\n        className: \"topic-box\",\n        fluid: true,\n        search: true,\n        selection: true,\n        options: topicOptions,\n        onChange: this.changeHandler.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: display_charts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      }, React.createElement(Button, {\n        compact: true,\n        positive: true,\n        onClick: this.stop_handler.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      }, buttonString, \" this topic\"), React.createElement(Button, {\n        compact: true,\n        negative: true,\n        onClick: this.delete_handler.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      }, \"Delete this topic\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"charts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, \"Accumulative Sentiment\"), React.createElement(GaugeChart, {\n        id: \"gauge-chart1\",\n        nrOfLevels: 2,\n        animate: false,\n        percent: this.state.acc_polar,\n        hideText: true,\n        colors: ['#FF0000', '#00FF00'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }), React.createElement(Label, {\n        color: 'green',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      }, \"Positive:\", React.createElement(Label.Detail, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, this.state.acc_positive)), React.createElement(Label, {\n        color: 'red',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, \"Negative:\", React.createElement(Label.Detail, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, this.state.acc_negative)), React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      }, \"Neutral:\", React.createElement(Label.Detail, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, this.state.acc_neutral)), React.createElement(Label, {\n        color: 'yellow',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        },\n        __self: this\n      }, \"Total:\", React.createElement(Label.Detail, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      }, this.state.acc_total)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"sample-tweets\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, \"Tweet Samples\"), React.createElement(\"div\", {\n        className: \"date-slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, React.createElement(Slider, {\n        className: \"slider\",\n        onChange: this.sliderHandler,\n        valueLabelDisplay: \"on\",\n        max: this.state.number_of_days,\n        min: 1,\n        marks: marks,\n        value: this.state.sliderVal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608\n        },\n        __self: this\n      }), React.createElement(Select, {\n        compact: true,\n        options: numberOptions,\n        value: this.state.number_of_samples,\n        onChange: this.inputChangeHandler.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        },\n        __self: this\n      }), React.createElement(Select, {\n        compact: true,\n        options: attitudeOptions,\n        value: this.state.curr_attitude,\n        onChange: this.attitudeChangeHandler.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 613\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614\n        },\n        __self: this\n      }), TableExampleDefinition), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }), React.createElement(Typography, {\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619\n        },\n        __self: this\n      }, \"Time Range of Data\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622\n        },\n        __self: this\n      }), React.createElement(Slider, {\n        className: \"slider\",\n        valueLabelDisplay: \"on\",\n        \"aria-labelledby\": \"range-slider\",\n        max: this.state.number_of_days,\n        min: 1,\n        marks: marks,\n        onChange: this.chartSliderChangeHandler.bind(this),\n        value: this.state.chartSliderVal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623\n        },\n        __self: this\n      }), React.createElement(HighchartsReact, {\n        className: \"topic-box\",\n        highcharts: Highcharts,\n        options: activityOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632\n        },\n        __self: this\n      }), React.createElement(HighchartsReact, {\n        className: \"topic-box\",\n        highcharts: Highcharts,\n        options: sentimentOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/zecheng3/workspace/narrative_dectection/narrative_detection_frontend/src/components/Demo/Demo.jsx"],"names":["React","Sidebar","Container","Row","Col","ResponsiveLine","ResponsiveBar","ResponsivePieCanvas","GaugeChart","Thermometer","Slider","Select","Button","Input","Dropdown","Table","Label","Link","Highcharts","HighchartsReact","Latex","ordinalSuffixOf","Typography","APIUrl_get_all_topics","APIUrl_get_daily_sample","APIUrl_get_result","APIUrl_delete","APIUrl_stop_update","APIUrl_resume_update","App","Component","constructor","props","state","error","isLoaded","topics","topicOptions","curr_topic","sliderVal","samples","neutral_list","positive_list","negative_list","total_list","polar","acc_polar","acc_positive","acc_negative","acc_neutral","acc_total","begin_date","display_charts","number_of_days","curr_attitude","number_of_samples","stopped","errorMsg","chartSliderVal","op_dict","sliderHandler","bind","sliderTxtHandler","componentDidMount","fetch","then","res","json","result","setState","data","map","e","text","split","join","inputChangeHandler","v","value","get_samples","attitudeChangeHandler","NaN","temp","console","log","parseInt","fetch_sample_data","topic","length","delete_handler","method","window","location","reload","stop_handler","chartSliderChangeHandler","positive","neutral","negative","total","start_time","pause","changeHandler","render","buttonString","activityOptions","title","subtitle","yAxis","xAxis","legend","layout","align","verticalAlign","credits","enabled","plotOptions","series","label","connectorAllowed","pointStart","name","responsive","rules","condition","maxWidth","chartOptions","sentimentOptions","chart","type","labels","format","tooltip","pointFormat","area","stacking","lineColor","lineWidth","marker","accessibility","pointDescriptionFormatter","point","round","x","Math","index","category","y","percentage","LaTeX","key","attitudeOptions","numberOptions","Array","keys","toString","marks","TableExampleDefinition","display","message","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Sidebar from \"react-sidebar\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { ResponsiveLine } from '@nivo/line'\nimport { ResponsiveBar } from '@nivo/bar'\nimport { ResponsivePieCanvas } from '@nivo/pie'\nimport './Demo.css'\nimport GaugeChart from 'react-gauge-chart'\nimport Thermometer from 'react-thermometer-component'\nimport Slider from '@material-ui/core/Slider';\nimport { Select, Button, Input, Dropdown, Table, Label } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport 'katex/dist/katex.min.css'\nimport Latex from 'react-latex-next'\nimport { ordinalSuffixOf } from 'ordinal-suffix-of';\nimport Typography from '@material-ui/core/Typography';\n\n// var APIUrl_get_all_topics = 'http://apollo5.cs.illinois.edu:8000/get_all_topics';\n// var APIUrl_get_all_topics = 'http://apollo5.cs.illinois.edu:8000/get_all_topics';\n// var APIUrl_get_daily_sample = 'http://apollo5.cs.illinois.edu:8000/get_daily_sample';\n// var APIUrl_get_result = 'http://apollo5.cs.illinois.edu:8000/get_result/';\n// var APIUrl_delete = 'http://apollo5.cs.illinois.edu:8000/delete/';\n// var APIUrl_stop_update = 'http://apollo5.cs.illinois.edu:8000/stop_update/';\n// var APIUrl_resume_update = 'http://apollo5.cs.illinois.edu:8000/resume_update/';\n\nvar APIUrl_get_all_topics = 'http://127.0.0.1:8000/get_all_topics';\nvar APIUrl_get_daily_sample = 'http://127.0.0.1:8000/get_daily_sample';\nvar APIUrl_get_result = 'http://127.0.0.1:8000/get_result/';\nvar APIUrl_delete = 'http://127.0.0.1:8000/delete/';\nvar APIUrl_stop_update = 'http://127.0.0.1:8000/stop_update/';\nvar APIUrl_resume_update = 'http://127.0.0.1:8000/resume_update/';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \terror: null,\n    \tisLoaded: false,\n    \ttopics: [],\n      topicOptions: [],\n      curr_topic: '',\n      sliderVal: 1,\n      samples: [],\n      neutral_list: [],\n      positive_list: [],\n      negative_list: [],\n      total_list: [],\n      polar: 0,\n      acc_polar: 0,\n      acc_positive: 0,\n      acc_negative: 0,\n      acc_neutral: 0,\n      acc_total: 0,\n      begin_date: 'Loading...',\n      display_charts: false,\n      number_of_days: 0,\n      curr_attitude: 'positive',\n      number_of_samples: 0,\n      stopped: false,\n      errorMsg: '',\n      chartSliderVal: [1, 1],\n      op_dict: {},\n    };\n    this.sliderHandler = this.sliderHandler.bind(this);\n    this.sliderTxtHandler = this.sliderTxtHandler.bind(this);\n\n  }\n\n  componentDidMount() {\n  \tfetch(APIUrl_get_all_topics)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          topics: result.data,\n          topicOptions: result.data.map((e) => {\n            return {text: e.split(\"_\").join(\" \")};\n          })\n        })\n      });\n\n    }\n  \n    inputChangeHandler(e, v) {\n      this.setState({\n        number_of_samples: v.value,\n      }, () => {\n        this.get_samples();\n      })\n      \n    }\n\n    attitudeChangeHandler(e, v) {\n      this.setState({\n        curr_attitude: v.value,\n      }, () => {\n        this.get_samples();\n      })\n      \n    }\n\n    get_samples() {\n      if(this.state.number_of_samples == NaN) {\n        this.setState({\n          samples: [],\n          errorMsg: 'Please input an integer between 1-30.'\n        }) \n        return\n      } \n\n      if(this.state.number_of_samples == 0) {\n          this.setState({\n          samples: [],\n        })\n          return;\n        }\n      if(this.state.number_of_samples > 30 || this.state.number_of_samples < 1) {\n        this.setState({\n          samples: [],\n          errorMsg: 'Please input an integer between 1-30.'\n        })\n        return\n      } \n      fetch(APIUrl_get_daily_sample + '/' + this.state.curr_topic + '/' + this.state.number_of_samples)\n      .then(res => res.json())\n      .then(\n        (result) => {\n            var temp = this.state.op_dict;\n            if (!(this.state.curr_topic in temp))\n              {\n                  temp[this.state.curr_topic] = {};\n              }\n            temp[this.state.curr_topic]['curr_attitude'] = this.state.curr_attitude; \n            temp[this.state.curr_topic]['number_of_samples'] = this.state.number_of_samples; \n            console.log(result.data, this.state.sliderVal, this.state.curr_attitude, this.state.number_of_samples)\n            this.setState({\n              op_dict: temp,\n              samples: result.data[this.state.sliderVal - 1][this.state.curr_attitude],\n            })\n            // console.log(result.data[this.state.sliderVal - 1][this.state.curr_attitude]);\n          \n        });\n    }\n\n    sliderHandler(e, value) {\n      this.setState({\n        sliderVal: value,\n      });\n      // console.log(value);\n      if(this.state.curr_topic == '') {\n        return\n      }\n      fetch(APIUrl_get_daily_sample + '/' + this.state.curr_topic + '/' + parseInt(this.state.number_of_samples))\n      .then(res => res.json())\n      .then(\n        (result) => {\n            var temp = this.state.op_dict;\n\n            if (!(this.state.curr_topic in temp))\n              {\n                  temp[this.state.curr_topic] = {};\n              }\n\n            temp[this.state.curr_topic]['sliderVal'] = value;\n            // console.log(temp);\n            this.setState({\n              op_dict: temp,\n              samples: result.data[value - 1][this.state.curr_attitude],\n            })\n          \n        });\n    }\n\n    sliderTxtHandler(e) {\n      \n    }\n\n\n    fetch_sample_data(topic) {\n      fetch(APIUrl_get_daily_sample + '/' + topic + '/3')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          // console.log(result.data.length , this.state.sliderVal)\n          \n            this.setState({\n              number_of_days: result.data.length,\n              chartSliderVal: [1, result.data.length],\n            })\n          \n          \n        });\n    }\n\n\n    delete_handler(e) {\n      fetch(APIUrl_delete + this.state.curr_topic, {\n        method: 'DELETE'\n      })\n      window.location.reload(true);\n    }\n\n    stop_handler(e) {\n      if(this.state.stopped) {\n        fetch(APIUrl_resume_update + this.state.curr_topic, {\n          method: 'PUT'\n        })\n        this.setState({\n          stopped: false,\n        })\n      } else {\n        fetch(APIUrl_stop_update + this.state.curr_topic, {\n          method: 'PUT'\n        })\n        this.setState({\n          stopped: true,\n        })\n      }\n      \n      \n\n    }\n\n    chartSliderChangeHandler(e, value) {\n      this.setState({\n        chartSliderVal: value,\n      });\n      // console.log(value);\n      fetch(APIUrl_get_result + this.state.curr_topic + '/' + parseInt(value[0]) + '/' + parseInt(value[1]))\n      .then(res => res.json())\n      .then(\n        (result) => {\n          // console.log(result.data.length , this.state.sliderVal)\n          this.setState({\n            positive_list: result.data.positive,\n            neutral_list: result.data.neutral,\n            negative_list: result.data.negative,\n            total_list: result.data.total,\n            polar: result.data.polar,\n            begin_date: result.start_time,\n            display_charts: true,\n            stopped: result.pause,\n          })\n          \n        });\n    }\n\n    changeHandler(e, {value}) {\n      this.setState({\n        curr_topic: value,\n      })\n\n      this.fetch_sample_data(value);\n\n      fetch(APIUrl_get_result + value)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          // console.log(result.data.length , this.state.sliderVal)\n          // console.log(result.data.polar[result.data.polar.length - 1])\n          if(value in this.state.op_dict) {\n            var number_of_samples = this.state.op_dict[value]['number_of_samples'];\n            var curr_attitude = this.state.op_dict[value]['curr_attitude'];\n            var sliderVal = this.state.op_dict[value]['sliderVal'];\n          } else {\n            var number_of_samples = 0;\n            var curr_attitude = 'positive';\n            var sliderVal = 1;\n          }\n          this.setState({\n            positive_list: result.data.positive,\n            neutral_list: result.data.neutral,\n            negative_list: result.data.negative,\n            total_list: result.data.total,\n            polar: result.data.polar,\n            acc_polar: result.data.polar[result.data.polar.length - 1],\n            acc_positive: result.data.positive[result.data.positive.length - 1],\n            acc_negative: result.data.negative[result.data.negative.length - 1],\n            acc_neutral: result.data.neutral[result.data.neutral.length - 1],\n            acc_total: result.data.total[result.data.total.length - 1],\n            begin_date: result.start_time,\n            display_charts: true,\n            stopped: result.pause,\n            curr_topic: value,\n            number_of_samples: number_of_samples,\n            curr_attitude: curr_attitude,\n            sliderVal: sliderVal,\n          }, () => {\n            this.get_samples();\n          })\n          \n        });\n\n\n    }\n\n    \n\n  render() {\n    // console.log(this.statestopped);\n    // console.log(this.state.chartSliderVal)\n    const buttonString = this.state.stopped ? \"Resume\" : \"Stop\";\n\n    const activityOptions = {\n\n        title: {\n          text: 'Activity by Hours'\n        },\n\n        subtitle: {\n          text: 'Source: Twitter'\n        },\n\n        yAxis: {\n          title: {\n            text: 'Number of Posts'\n          }\n        },\n\n        xAxis: {\n          title: {\n            text: 'From ' + this.state.begin_date + ' (Hours)'\n          }\n        },\n\n        legend: {\n          layout: 'vertical',\n          align: 'right',\n          verticalAlign: 'middle'\n        },\n\n        credits: {\n          enabled: false\n        },\n\n        plotOptions: {\n          series: {\n            label: {\n              connectorAllowed: false\n            },\n            pointStart: 0\n          }\n        },\n\n        series: [{\n          name: 'Positive',\n          data: this.state.positive_list,\n        },{\n          name: 'Neutral',\n          data: this.state.neutral_list,\n        },{\n          name: 'Negative',\n          data: this.state.negative_list,\n        }],\n\n        responsive: {\n          rules: [{\n            condition: {\n              maxWidth: 500\n            },\n            chartOptions: {\n              legend: {\n                layout: 'horizontal',\n                align: 'center',\n                verticalAlign: 'bottom'\n              }\n            }\n          }]\n        }\n\n      };\n\n      const sentimentOptions = {\n\n\n        chart: {\n            type: 'area'\n        },\n        title: {\n            text: 'Sentiment Distribution by Hours'\n        },\n        subtitle: {\n            text: 'Source: Twitter'\n        },\n        xAxis: {\n             title: {\n                text: 'From ' + this.state.begin_date + ' (Hours)'\n              }\n        },\n        yAxis: {\n            labels: {\n                format: '{value}%'\n            },\n            title: {\n                text: 'Sentiment Ratio'\n            }\n        },\n\n        legend: {\n          layout: 'vertical',\n          align: 'right',\n          verticalAlign: 'middle'\n        },\n\n        credits: {\n          enabled: false\n        },\n\n\n        tooltip: {\n            pointFormat: '<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.percentage:.1f}%</b> ({point.y:,.0f})<br/>',\n            split: true\n        },\n        plotOptions: {\n            area: {\n                stacking: 'percent',\n                lineColor: '#ffffff',\n                lineWidth: 1,\n                marker: {\n                    lineWidth: 1,\n                    lineColor: '#ffffff'\n                },\n                accessibility: {\n                    pointDescriptionFormatter: function (point) {\n                        function round(x) {\n                            return Math.round(x * 100) / 100;\n                        }\n                        return (point.index + 1) + ', ' + point.category + ', ' +\n                            point.y + ' millions, ' + round(point.percentage) + '%, ' +\n                            point.series.name;\n                    }\n                }\n            }\n        },\n        series: [{\n            name: 'Positive',\n            data: this.state.positive_list,\n        }, {\n            name: 'Neutral',\n            data: this.state.neutral_list,\n        }, {\n            name: 'Negative',\n            data: this.state.negative_list,\n        }]\n\n      };\n\n\n      const LaTeX = 'We calculate the $Support$ $Rate$ by formula $(2$ $\\\\times$ $#Positive$ $+$ $#Neutral$)$/$ (2 $\\\\times$ #Total)'\n\n  \tconst { error, isLoaded} = this.state;\n\n    const topicOptions = this.state.topics.map((e) => {\n            return {text: e.split(\"_\").join(\" \"), key: e, value: e};\n          })\n    const attitudeOptions = \n      [{text: 'Positive', key: 'positive', value: 'positive'}\n      , {text: 'Neutral', key: 'neutral', value: 'neutral'}\n      , {text: 'Negative', key: 'negative', value: 'negative'}];\n\n    const numberOptions = [...Array(31).keys()].map(e => {\n        return {text: e.toString(10), key: e, value: e};\n      });\n    console.log(numberOptions);\n\n    const marks = [\n      {\n        value: 1,\n        label: '1st Day (' + this.state.begin_date + ')',\n      },\n      {\n        value: this.state.number_of_days,\n        label: ordinalSuffixOf(this.state.number_of_days) + ' Day',\n      },\n    ];\n\n\n    const samples = this.state.samples.map((e) =>\n          <Table.Row>\n            <Table.Cell>{e['text']}<a href={e['url']}> [Link]</a></Table.Cell>\n          </Table.Row>\n    );\n\n\n    const TableExampleDefinition = this.state.samples.length > 0 ? (\n      <Table celled structured className='tweet_table'>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Sample Tweets</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {samples}\n\n        </Table.Body>\n      </Table>\n      ) : (<div>\n        {this.state.errorMsg}\n      </div>);\n\n      // console.log(this.state.acc_polar)\n\n\n    var display_charts = {display: this.state.display_charts ? 'block' : 'none' };\n\n  \t if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (isLoaded) {\n      return <div className='display'>Loading...</div>;\n    } else {\n\t    return (\n\t        <div className='display'>\n            <br/>\n\n\n            <Button.Group size='large'>\n              <Link to={process.env.PUBLIC_URL + \"/Search\"}>\n                <Button>\n                  Search\n                </Button>\n              </Link>\n              <Button.Or />\n              <Link to={process.env.PUBLIC_URL + \"/Archive\"}>\n                <Button>\n                  Archive\n                </Button>\n              </Link>\n            </Button.Group>\n\n\n            <h1>Choose a topic!</h1>\n\n\n            <Dropdown\n              placeholder='Select Topic'\n              className='topic-box'\n              fluid\n              search\n              selection\n              options={topicOptions}\n              onChange={this.changeHandler.bind(this)}\n            />\n\n\n            <br/>\n            <br/>\n \n\n            <div style={display_charts}>\n\n            <Button compact positive onClick={this.stop_handler.bind(this)}>{buttonString} this topic</Button>\n            <Button compact negative onClick={this.delete_handler.bind(this)}>Delete this topic</Button>\n            \n            <br/>\n            <br/>\n\n            <div className='charts'>\n              <Typography gutterBottom>\n                  Accumulative Sentiment\n                </Typography>\n              <GaugeChart id=\"gauge-chart1\" \n                nrOfLevels={2} \n                animate={false}\n                percent={this.state.acc_polar}\n                hideText={true}\n                colors={['#FF0000', '#00FF00']}\n              />\n              <br/>\n              <Label color={'green'}>\n                Positive:\n                <Label.Detail>{this.state.acc_positive}</Label.Detail>\n              </Label>\n              <Label color={'red'}>\n                Negative:\n                <Label.Detail>{this.state.acc_negative}</Label.Detail>\n              </Label>\n              <Label >\n                Neutral:\n                <Label.Detail>{this.state.acc_neutral}</Label.Detail>\n              </Label>\n              <Label color={'yellow'}>\n                Total:\n                <Label.Detail>{this.state.acc_total}</Label.Detail>\n              </Label>\n              <br/>\n              <br/>\n              <br/>\n            </div>\n\n            <div className='sample-tweets'>\n              <Typography gutterBottom>\n                    Tweet Samples\n                  </Typography>\n              <div className='date-slider'>\n                  \n                  <Slider className='slider'\n                  onChange={this.sliderHandler}\n                  valueLabelDisplay=\"on\"\n                  max={this.state.number_of_days}\n                  min={1}\n                  marks={marks}\n                  value={this.state.sliderVal}/>\n                </div>\n                <br/>\n\n\n                  <Select compact options={numberOptions} value={this.state.number_of_samples} onChange={this.inputChangeHandler.bind(this)}/>\n                  <Select compact options={attitudeOptions} value={this.state.curr_attitude} onChange={this.attitudeChangeHandler.bind(this)}/>\n                <br/>\n                <br/>\n                {TableExampleDefinition}\n              </div>\n              <br/>\n              <br/>\n                <Typography gutterBottom>\n                  Time Range of Data\n                </Typography>\n                <br/>\n                <Slider className='slider'\n                  valueLabelDisplay=\"on\"\n                  aria-labelledby=\"range-slider\"\n                  max={this.state.number_of_days}\n                  min={1}\n                  marks={marks}\n                  onChange={this.chartSliderChangeHandler.bind(this)}\n                  value={this.state.chartSliderVal}\n                />\n            <HighchartsReact\n              className='topic-box'\n              highcharts={Highcharts}\n              options={activityOptions}\n            />\n            <HighchartsReact\n              className='topic-box'\n              highcharts={Highcharts}\n              options={sentimentOptions}\n            />\n\n           <br/>\n           <br/>\n\n           </div>\n          </div>\n\t    );\n\t  }\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}