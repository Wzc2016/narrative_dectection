{"ast":null,"code":"var _jsxFileName = \"/home/zecheng3/workspace/narrative_dectection/narrative_detection_frontend/src/App.js\";\nimport React from \"react\";\nimport Sidebar from \"react-sidebar\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { ResponsiveLine } from '@nivo/line';\nimport { ResponsiveBar } from '@nivo/bar';\nimport { ResponsivePieCanvas } from '@nivo/pie';\nimport { pie_data, line_data, line_pos_neg, activity_pie_data } from \"./data\";\nimport './App.css';\nimport GaugeChart from 'react-gauge-chart';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeTitle = title => {\n      this.setState({\n        currentTopic: title,\n        sidebarOpen: false\n      });\n    };\n\n    this.changeColor = number => {\n      this.setState({\n        selected: number\n      });\n    };\n\n    this.myColor = position => {\n      if (this.state.selected === position) {\n        return \"grey\";\n      }\n\n      return \"\";\n    };\n\n    this.state = {\n      sidebarOpen: true,\n      selected: 0,\n      currentTopic: \"ACTF\"\n    };\n    this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\n  }\n\n  onSetSidebarOpen(open) {\n    this.setState({\n      sidebarOpen: open\n    });\n  }\n\n  render() {\n    return React.createElement(Sidebar, {\n      sidebar: React.createElement(\"div\", {\n        styles: {\n          height: '500px',\n          width: '500px',\n          overflowY: 'scroll',\n          flexDirection: 'column'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          background: this.myColor(0)\n        },\n        onClick: () => this.changeTitle(\"ACTF\"),\n        onMouseEnter: () => this.changeColor(0),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"ACTF\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          background: this.myColor(1)\n        },\n        onClick: () => this.changeTitle(\"Coronavirus\"),\n        onMouseEnter: () => this.changeColor(1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Coronavirus\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          background: this.myColor(2)\n        },\n        onClick: () => this.changeTitle(\"Housing\"),\n        onMouseEnter: () => this.changeColor(2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Housing\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          background: this.myColor(3)\n        },\n        onClick: () => this.changeTitle(\"Recruiting\"),\n        onMouseEnter: () => this.changeColor(3),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Recruiting\"))),\n      open: this.state.sidebarOpen,\n      onSetOpen: this.onSetSidebarOpen,\n      styles: {\n        sidebar: {\n          background: \"white\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.currentTopic), React.createElement(\"button\", {\n      onClick: () => this.onSetSidebarOpen(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Select topic\"), React.createElement(\"block\", {\n      className: \"charts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(GaugeChart, {\n      id: \"gauge-chart1\",\n      nrOfLevels: 2,\n      animate: false,\n      percent: 0.8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(GaugeChart, {\n      id: \"gauge-chart2\",\n      nrOfLevels: 2,\n      animate: false,\n      percent: 0.8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(GaugeChart, {\n      id: \"gauge-chart3\",\n      nrOfLevels: 2,\n      animate: false,\n      percent: 0.8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Activities\")));\n  }\n\n} // function linechart(data) {\n//     return (\n//         <ResponsiveLine\n//             data={data}\n//             curve=\"natural\"\n//             // width={1000}\n//             // height={500}\n//             axisTop={null}\n//             axisRight={null}\n//             axisBottom={{\n//                 orient: 'bottom',\n//                 tickSize: 10,\n//                 tickPadding: 5,\n//                 tickRotation: 0,\n//                 legend: 'Date',\n//                 legendOffset: 36,\n//                 legendPosition: 'middle',\n//                 format: \"%b %d\"\n//             }}\n//             axisLeft={{\n//                 orient: 'left',\n//                 tickSize: 10,\n//                 tickPadding: 5,\n//                 tickRotation: 0,\n//                 legend: 'activity count',\n//                 legendOffset: -40,\n//                 legendPosition: 'middle'\n//             }}\n//             margin={{\n//                 top: 50,\n//                 right: 50,\n//                 bottom: 50,\n//                 left: 50\n//             }}\n//             yScale={{\n//                 type: \"linear\",\n//                 stacked: false,\n//                 min: 0,\n//                 max: \"auto\"\n//             }}\n//             xScale={{\n//                 type: \"time\",\n//                 precision: \"day\",\n//                 format: \"native\"\n//             }}\n//             legends={[\n//                 {\n//                     anchor: 'bottom-right',\n//                     direction: 'column',\n//                     justify: false,\n//                     translateX: 0,\n//                     translateY: 0,\n//                     itemsSpacing: 0,\n//                     itemDirection: 'left-to-right',\n//                     itemWidth: 80,\n//                     itemHeight: 20,\n//                     itemOpacity: 0.75,\n//                     symbolSize: 12,\n//                     symbolShape: 'circle',\n//                     symbolBorderColor: 'rgba(0, 0, 0, .5)',\n//                     effects: [\n//                         {\n//                             on: 'hover',\n//                             style: {\n//                                 itemBackground: 'rgba(0, 0, 0, .03)',\n//                                 itemOpacity: 1\n//                             }\n//                         }\n//                     ]\n//                 }\n//             ]}\n//         />\n//     );\n// }\n// function piechart(data) {\n//     return (\n//         <ResponsivePieCanvas\n//             data={data}\n//             margin={{ top: 40, right: 200, bottom: 40, left: 80 }}\n//             pixelRatio={2}\n//             innerRadius={0.5}\n//             padAngle={0.7}\n//             cornerRadius={3}\n//             colors={{ scheme: 'paired' }}\n//             width={800}\n//             height={800}\n//             borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.6 ] ] }}\n//             radialLabelsSkipAngle={10}\n//             radialLabelsTextXOffset={6}\n//             radialLabelsTextColor=\"#333333\"\n//             radialLabelsLinkOffset={0}\n//             radialLabelsLinkDiagonalLength={16}\n//             radialLabelsLinkHorizontalLength={24}\n//             radialLabelsLinkStrokeWidth={1}\n//             radialLabelsLinkColor={{ from: 'color' }}\n//             slicesLabelsSkipAngle={10}\n//             slicesLabelsTextColor=\"#333333\"\n//             animate={true}\n//             motionStiffness={90}\n//             motionDamping={15}\n//             legends={[\n//                 {\n//                     anchor: 'right',\n//                     direction: 'column',\n//                     translateX: 140,\n//                     itemWidth: 60,\n//                     itemHeight: 14,\n//                     itemsSpacing: 2,\n//                     symbolSize: 14,\n//                     symbolShape: 'circle'\n//                 }\n//             ]}\n//         />\n//     )\n// }\n// // const styles = StyleSheet.create({\n// //\n// // });\n\n\nexport default App;","map":{"version":3,"sources":["/home/zecheng3/workspace/narrative_dectection/narrative_detection_frontend/src/App.js"],"names":["React","Sidebar","Container","Row","Col","ResponsiveLine","ResponsiveBar","ResponsivePieCanvas","pie_data","line_data","line_pos_neg","activity_pie_data","GaugeChart","App","Component","constructor","props","changeTitle","title","setState","currentTopic","sidebarOpen","changeColor","number","selected","myColor","position","state","onSetSidebarOpen","bind","open","render","height","width","overflowY","flexDirection","background","sidebar"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Sidebar from \"react-sidebar\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { ResponsiveLine } from '@nivo/line'\nimport { ResponsiveBar } from '@nivo/bar'\nimport { ResponsivePieCanvas } from '@nivo/pie'\nimport {pie_data, line_data, line_pos_neg,activity_pie_data} from \"./data\";\nimport './App.css'\nimport GaugeChart from 'react-gauge-chart'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sidebarOpen: true,\n        selected: 0,\n      currentTopic:\"ACTF\"\n    };\n    this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\n  }\n\n  onSetSidebarOpen(open) {\n    this.setState({ sidebarOpen: open });\n  }\n\n    changeTitle = (title) => {\n        this.setState(\n            { currentTopic: title,\n                sidebarOpen: false }\n            );\n    }\n\n    changeColor = (number) => {\n        this.setState(\n            { selected: number}\n        );\n    }\n\n    myColor =(position) => {\n        if (this.state.selected === position) {\n            return \"grey\";\n        }\n        return \"\";\n    }\n\n  render() {\n    return (\n        <Sidebar\n            sidebar={\n              <div styles={{ height: '500px', width:'500px', overflowY: 'scroll', flexDirection: 'column' }} >\n              <Row>\n              <h2 style={{background: this.myColor(0)}} onClick={() => this.changeTitle(\"ACTF\")} onMouseEnter={() => this.changeColor(0)}>\n                ACTF\n              </h2>\n              </Row>\n              <Row>\n              <h2 style={{background: this.myColor(1)}} onClick={() => this.changeTitle(\"Coronavirus\")} onMouseEnter={() => this.changeColor(1)}>\n                Coronavirus\n              </h2>\n              </Row>\n              <Row>\n              <h2 style={{background: this.myColor(2)}} onClick={() => this.changeTitle(\"Housing\")} onMouseEnter={() => this.changeColor(2)}>\n                Housing\n              </h2>\n              </Row>\n              <Row>\n              <h2 style={{background: this.myColor(3)}} onClick={() => this.changeTitle(\"Recruiting\")} onMouseEnter={() => this.changeColor(3)}>\n                Recruiting\n              </h2>\n              </Row>\n              </div>\n            }\n            open={this.state.sidebarOpen}\n            onSetOpen={this.onSetSidebarOpen}\n            styles={{ sidebar: { background: \"white\" } }}\n        >\n            <h1>\n                {this.state.currentTopic}\n            </h1>\n            <button onClick={() => this.onSetSidebarOpen(true)}>\n                Select topic\n            </button>\n            <block className='charts'>\n\t            <GaugeChart id=\"gauge-chart1\" \n\t              nrOfLevels={2} \n\t              animate={false}\n\t              percent={0.8}\n\t            />\n\t            <GaugeChart id=\"gauge-chart2\" \n\t              nrOfLevels={2} \n\t              animate={false}\n\t              percent={0.8}\n\t            />\n\t            <GaugeChart id=\"gauge-chart3\" \n\t              nrOfLevels={2} \n\t              animate={false}\n\t              percent={0.8}\n\t            />\n            </block>\n            <React.Fragment>\n                <h2>Activities</h2>\n\n            </React.Fragment>\n        </Sidebar>\n    );\n  }\n}\n\n// function linechart(data) {\n//     return (\n//         <ResponsiveLine\n//             data={data}\n//             curve=\"natural\"\n//             // width={1000}\n//             // height={500}\n//             axisTop={null}\n//             axisRight={null}\n//             axisBottom={{\n//                 orient: 'bottom',\n//                 tickSize: 10,\n//                 tickPadding: 5,\n//                 tickRotation: 0,\n//                 legend: 'Date',\n//                 legendOffset: 36,\n//                 legendPosition: 'middle',\n//                 format: \"%b %d\"\n//             }}\n//             axisLeft={{\n//                 orient: 'left',\n//                 tickSize: 10,\n//                 tickPadding: 5,\n//                 tickRotation: 0,\n//                 legend: 'activity count',\n//                 legendOffset: -40,\n//                 legendPosition: 'middle'\n//             }}\n//             margin={{\n//                 top: 50,\n//                 right: 50,\n//                 bottom: 50,\n//                 left: 50\n//             }}\n//             yScale={{\n//                 type: \"linear\",\n//                 stacked: false,\n//                 min: 0,\n//                 max: \"auto\"\n//             }}\n//             xScale={{\n//                 type: \"time\",\n//                 precision: \"day\",\n//                 format: \"native\"\n//             }}\n//             legends={[\n//                 {\n//                     anchor: 'bottom-right',\n//                     direction: 'column',\n//                     justify: false,\n//                     translateX: 0,\n//                     translateY: 0,\n//                     itemsSpacing: 0,\n//                     itemDirection: 'left-to-right',\n//                     itemWidth: 80,\n//                     itemHeight: 20,\n//                     itemOpacity: 0.75,\n//                     symbolSize: 12,\n//                     symbolShape: 'circle',\n//                     symbolBorderColor: 'rgba(0, 0, 0, .5)',\n//                     effects: [\n//                         {\n//                             on: 'hover',\n//                             style: {\n//                                 itemBackground: 'rgba(0, 0, 0, .03)',\n//                                 itemOpacity: 1\n//                             }\n//                         }\n//                     ]\n//                 }\n//             ]}\n//         />\n//     );\n// }\n\n// function piechart(data) {\n//     return (\n//         <ResponsivePieCanvas\n//             data={data}\n//             margin={{ top: 40, right: 200, bottom: 40, left: 80 }}\n//             pixelRatio={2}\n//             innerRadius={0.5}\n//             padAngle={0.7}\n//             cornerRadius={3}\n//             colors={{ scheme: 'paired' }}\n//             width={800}\n//             height={800}\n//             borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.6 ] ] }}\n//             radialLabelsSkipAngle={10}\n//             radialLabelsTextXOffset={6}\n//             radialLabelsTextColor=\"#333333\"\n//             radialLabelsLinkOffset={0}\n//             radialLabelsLinkDiagonalLength={16}\n//             radialLabelsLinkHorizontalLength={24}\n//             radialLabelsLinkStrokeWidth={1}\n//             radialLabelsLinkColor={{ from: 'color' }}\n//             slicesLabelsSkipAngle={10}\n//             slicesLabelsTextColor=\"#333333\"\n//             animate={true}\n//             motionStiffness={90}\n//             motionDamping={15}\n//             legends={[\n//                 {\n//                     anchor: 'right',\n//                     direction: 'column',\n//                     translateX: 140,\n//                     itemWidth: 60,\n//                     itemHeight: 14,\n//                     itemsSpacing: 2,\n//                     symbolSize: 14,\n//                     symbolShape: 'circle'\n//                 }\n//             ]}\n//         />\n//     )\n// }\n// // const styles = StyleSheet.create({\n// //\n// // });\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}