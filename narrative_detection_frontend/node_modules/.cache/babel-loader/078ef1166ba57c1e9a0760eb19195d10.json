{"ast":null,"code":"var _jsxFileName = \"/home/zecheng3/workspace/narrative_dectection/narrative_detection_frontend/src/components/Demo/Demo.jsx\";\nimport React from \"react\";\nimport Sidebar from \"react-sidebar\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { ResponsiveLine } from '@nivo/line';\nimport { ResponsiveBar } from '@nivo/bar';\nimport { ResponsivePieCanvas } from '@nivo/pie';\nimport './Demo.css';\nimport GaugeChart from 'react-gauge-chart';\nimport Thermometer from 'react-thermometer-component'; // import Slider, { Range } from 'rc-slider'; \n// import 'rc-slider/assets/index.css';\n\nimport Slider from '@material-ui/core/Slider';\nimport { Button, Input, Dropdown, Table } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nvar APIUrl_get_curr_topics = 'http://127.0.0.1:8000/get_curr_topics';\nvar APIUrl_get_daily_sample = 'http://127.0.0.1:8000/get_daily_sample';\nvar APIUrl_get_result = 'http://127.0.0.1:8000/get_result/';\nvar beginDate = '01242020';\nvar endDate = '02162020';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      topics: [],\n      topicOptions: [],\n      curr_topic: '',\n      sliderVal: 1,\n      neutral_sample: [],\n      pro_sample: [],\n      anti_sample: [],\n      neutral_list: [],\n      positive_list: [],\n      negative_list: [],\n      total_list: []\n    };\n    this.sliderHandler = this.sliderHandler.bind(this);\n    this.sliderTxtHandler = this.sliderTxtHandler.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(APIUrl_get_curr_topics).then(res => res.json()).then(result => {\n      this.setState({\n        topics: result.data,\n        topicOptions: result.data.map(e => {\n          return {\n            text: e\n          };\n        })\n      });\n    });\n  }\n\n  sliderHandler(e, value) {\n    this.setState({\n      sliderVal: value\n    }); // console.log(value);\n\n    if (this.state.curr_topic == '') {\n      return;\n    }\n\n    fetch(APIUrl_get_daily_sample + '/' + this.state.curr_topic).then(res => res.json()).then(result => {\n      if (result.data.length < value) {\n        this.setState({\n          neutral_sample: '',\n          pro_sample: '',\n          anti_sample: ''\n        });\n      } else {\n        this.setState({\n          neutral_sample: result.data[value - 1]['neutral'],\n          pro_sample: result.data[value - 1]['positive'],\n          anti_sample: result.data[value - 1]['negative']\n        });\n      }\n    });\n  }\n\n  sliderTxtHandler(e) {}\n\n  fetch_sample_data(topic) {\n    fetch(APIUrl_get_daily_sample + '/' + topic).then(res => res.json()).then(result => {\n      // console.log(result.data.length , this.state.sliderVal)\n      if (result.data.length < this.state.sliderVal) {\n        this.setState({\n          neutral_sample: '',\n          pro_sample: '',\n          anti_sample: ''\n        });\n      } else {\n        this.setState({\n          neutral_sample: result.data[this.state.sliderVal - 1]['neutral'],\n          pro_sample: result.data[this.state.sliderVal - 1]['positive'],\n          anti_sample: result.data[this.state.sliderVal - 1]['negative']\n        });\n      }\n    });\n  }\n\n  changeHandler(e, {\n    value\n  }) {\n    this.setState({\n      curr_topic: value\n    });\n    this.fetch_sample_data(value);\n    fetch(APIUrl_get_result + value).then(res => res.json()).then(result => {\n      // console.log(result.data.length , this.state.sliderVal)\n      this.setState({\n        positive_list: result.data.positive,\n        neutral_list: result.data.neutral,\n        negative_list: result.data.negative,\n        total_list: result.data.total\n      });\n    });\n  } // dateParser(date) {\n  // \treturn date.slice(0, 2) + '-' + date.slice(2, 4) + '-' + date.slice(4,8);\n  // }\n\n\n  valuetext(value) {\n    return `${value}Â°C`;\n  }\n\n  render() {\n    const activityOptions = {\n      title: {\n        text: 'Activity by hours'\n      },\n      subtitle: {\n        text: 'Source: Twitter'\n      },\n      yAxis: {\n        title: {\n          text: 'Number of Posts'\n        }\n      },\n      xAxis: {\n        accessibility: {\n          rangeDescription: 'Range: 2010 to 2017'\n        }\n      },\n      legend: {\n        layout: 'vertical',\n        align: 'right',\n        verticalAlign: 'middle'\n      },\n      plotOptions: {\n        series: {\n          label: {\n            connectorAllowed: false\n          },\n          pointStart: 0\n        }\n      },\n      series: [{\n        name: 'Positive',\n        data: this.state.positive_list\n      }, {\n        name: 'Negative',\n        data: this.state.negative_list\n      }, {\n        name: 'Neutral',\n        data: this.state.neutral_list\n      }],\n      responsive: {\n        rules: [{\n          condition: {\n            maxWidth: 500\n          },\n          chartOptions: {\n            legend: {\n              layout: 'horizontal',\n              align: 'center',\n              verticalAlign: 'bottom'\n            }\n          }\n        }]\n      }\n    };\n    const sentimentOptions = {\n      title: {\n        text: 'Activity by hours'\n      },\n      subtitle: {\n        text: 'Source: Twitter'\n      },\n      yAxis: {\n        title: {\n          text: 'Number of Posts'\n        }\n      },\n      xAxis: {\n        accessibility: {\n          rangeDescription: 'Range: 2010 to 2017'\n        }\n      },\n      legend: {\n        layout: 'vertical',\n        align: 'right',\n        verticalAlign: 'middle'\n      },\n      plotOptions: {\n        series: {\n          label: {\n            connectorAllowed: false\n          },\n          pointStart: 0\n        }\n      },\n      series: [{\n        name: 'Positive',\n        data: this.state.positive_list\n      }, {\n        name: 'Negative',\n        data: this.state.negative_list\n      }, {\n        name: 'Neutral',\n        data: this.state.neutral_list\n      }],\n      responsive: {\n        rules: [{\n          condition: {\n            maxWidth: 500\n          },\n          chartOptions: {\n            legend: {\n              layout: 'horizontal',\n              align: 'center',\n              verticalAlign: 'bottom'\n            }\n          }\n        }]\n      }\n    };\n    const {\n      error,\n      isLoaded\n    } = this.state;\n    const topicOptions = this.state.topics.map(e => {\n      return {\n        text: e,\n        key: e,\n        value: e\n      };\n    });\n    const marks = [{\n      value: 1,\n      label: '1st Day'\n    }, {\n      value: 15,\n      label: '15th Day'\n    }];\n    const TableExampleDefinition = React.createElement(Table, {\n      celled: true,\n      structured: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(Table.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"Beliefs\"), React.createElement(Table.HeaderCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"Sample Tweets\"))), React.createElement(Table.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      rowSpan: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \"Neutral\"), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, this.state.neutral_sample[0])), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, this.state.neutral_sample[1])), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, this.state.neutral_sample[2])), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      rowSpan: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, 'Pro-' + this.state.curr_topic), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, this.state.pro_sample[0])), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, this.state.pro_sample[1])), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, this.state.anti_sample[2])), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      rowSpan: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, 'Anti-' + this.state.curr_topic), React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, this.state.anti_sample[0])), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, this.state.anti_sample[1])), React.createElement(Table.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(Table.Cell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, this.state.anti_sample[2]))));\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (isLoaded) {\n      return React.createElement(\"div\", {\n        className: \"display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"display\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }), React.createElement(Button.Group, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: process.env.PUBLIC_URL + \"/Realtime\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, \"Realtime\")), React.createElement(Button.Or, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: process.env.PUBLIC_URL + \"/Demo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, \"Demo\"))), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, \"Choose a topic!\"), React.createElement(Dropdown, {\n        placeholder: \"Select Topic\",\n        className: \"topic-box\",\n        fluid: true,\n        search: true,\n        selection: true,\n        options: topicOptions,\n        onChange: this.changeHandler.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"date-slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(Slider, {\n        className: \"slider\",\n        onChange: this.sliderHandler,\n        getAriaValueText: this.valuetext,\n        valueLabelDisplay: \"on\",\n        max: 15,\n        min: 1,\n        marks: marks,\n        defaultValue: this.state.sliderVal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      })), TableExampleDefinition, React.createElement(HighchartsReact, {\n        className: \"topic-box\",\n        highcharts: Highcharts,\n        options: activityOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }), React.createElement(HighchartsReact, {\n        className: \"topic-box\",\n        highcharts: Highcharts,\n        options: sentimentOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/zecheng3/workspace/narrative_dectection/narrative_detection_frontend/src/components/Demo/Demo.jsx"],"names":["React","Sidebar","Container","Row","Col","ResponsiveLine","ResponsiveBar","ResponsivePieCanvas","GaugeChart","Thermometer","Slider","Button","Input","Dropdown","Table","Link","Highcharts","HighchartsReact","APIUrl_get_curr_topics","APIUrl_get_daily_sample","APIUrl_get_result","beginDate","endDate","App","Component","constructor","props","state","error","isLoaded","topics","topicOptions","curr_topic","sliderVal","neutral_sample","pro_sample","anti_sample","neutral_list","positive_list","negative_list","total_list","sliderHandler","bind","sliderTxtHandler","componentDidMount","fetch","then","res","json","result","setState","data","map","e","text","value","length","fetch_sample_data","topic","changeHandler","positive","neutral","negative","total","valuetext","render","activityOptions","title","subtitle","yAxis","xAxis","accessibility","rangeDescription","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","pointStart","name","responsive","rules","condition","maxWidth","chartOptions","sentimentOptions","key","marks","TableExampleDefinition","message","process","env","PUBLIC_URL"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,YAApC;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,SAASC,mBAAT,QAAoC,WAApC;AACA,OAAO,YAAP;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,WAAP,MAAwB,6BAAxB,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,EAAkCC,KAAlC,QAA+C,mBAA/C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AAEA,IAAIC,sBAAsB,GAAG,uCAA7B;AACA,IAAIC,uBAAuB,GAAG,wCAA9B;AACA,IAAIC,iBAAiB,GAAG,mCAAxB;AACA,IAAIC,SAAS,GAAG,UAAhB;AACA,IAAIC,OAAO,GAAG,UAAd;;AAMA,MAAMC,GAAN,SAAkBvB,KAAK,CAACwB,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE,IADK;AAEZC,MAAAA,QAAQ,EAAE,KAFE;AAGZC,MAAAA,MAAM,EAAE,EAHI;AAIXC,MAAAA,YAAY,EAAE,EAJH;AAKXC,MAAAA,UAAU,EAAE,EALD;AAMXC,MAAAA,SAAS,EAAE,CANA;AAOXC,MAAAA,cAAc,EAAE,EAPL;AAQXC,MAAAA,UAAU,EAAE,EARD;AASXC,MAAAA,WAAW,EAAE,EATF;AAUXC,MAAAA,YAAY,EAAE,EAVH;AAWXC,MAAAA,aAAa,EAAE,EAXJ;AAYXC,MAAAA,aAAa,EAAE,EAZJ;AAaXC,MAAAA,UAAU,EAAE;AAbD,KAAb;AAeA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AAED;;AAEDE,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,KAAK,CAAC3B,sBAAD,CAAL,CACE4B,IADF,CACOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADd,EAEEF,IAFF,CAGIG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZpB,QAAAA,MAAM,EAAEmB,MAAM,CAACE,IADH;AAEZpB,QAAAA,YAAY,EAAEkB,MAAM,CAACE,IAAP,CAAYC,GAAZ,CAAiBC,CAAD,IAAO;AACnC,iBAAO;AAACC,YAAAA,IAAI,EAAED;AAAP,WAAP;AACD,SAFa;AAFF,OAAd;AAMD,KAVJ;AAYE;;AAGDZ,EAAAA,aAAa,CAACY,CAAD,EAAIE,KAAJ,EAAW;AACtB,SAAKL,QAAL,CAAc;AACZjB,MAAAA,SAAS,EAAEsB;AADC,KAAd,EADsB,CAItB;;AACA,QAAG,KAAK5B,KAAL,CAAWK,UAAX,IAAyB,EAA5B,EAAgC;AAC9B;AACD;;AACDa,IAAAA,KAAK,CAAC1B,uBAAuB,GAAG,GAA1B,GAAgC,KAAKQ,KAAL,CAAWK,UAA5C,CAAL,CACCc,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGGG,MAAD,IAAY;AACV,UAAGA,MAAM,CAACE,IAAP,CAAYK,MAAZ,GAAqBD,KAAxB,EAA+B;AAC7B,aAAKL,QAAL,CAAc;AACZhB,UAAAA,cAAc,EAAE,EADJ;AAEZC,UAAAA,UAAU,EAAE,EAFA;AAGZC,UAAAA,WAAW,EAAE;AAHD,SAAd;AAKD,OAND,MAMO;AACL,aAAKc,QAAL,CAAc;AACZhB,UAAAA,cAAc,EAAEe,MAAM,CAACE,IAAP,CAAYI,KAAK,GAAG,CAApB,EAAuB,SAAvB,CADJ;AAEZpB,UAAAA,UAAU,EAAEc,MAAM,CAACE,IAAP,CAAYI,KAAK,GAAG,CAApB,EAAuB,UAAvB,CAFA;AAGZnB,UAAAA,WAAW,EAAEa,MAAM,CAACE,IAAP,CAAYI,KAAK,GAAG,CAApB,EAAuB,UAAvB;AAHD,SAAd;AAKD;AACF,KAjBH;AAkBD;;AAEDZ,EAAAA,gBAAgB,CAACU,CAAD,EAAI,CAEnB;;AAGDI,EAAAA,iBAAiB,CAACC,KAAD,EAAQ;AACvBb,IAAAA,KAAK,CAAC1B,uBAAuB,GAAG,GAA1B,GAAgCuC,KAAjC,CAAL,CACCZ,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGGG,MAAD,IAAY;AACV;AACA,UAAGA,MAAM,CAACE,IAAP,CAAYK,MAAZ,GAAqB,KAAK7B,KAAL,CAAWM,SAAnC,EAA8C;AAC5C,aAAKiB,QAAL,CAAc;AACZhB,UAAAA,cAAc,EAAE,EADJ;AAEZC,UAAAA,UAAU,EAAE,EAFA;AAGZC,UAAAA,WAAW,EAAE;AAHD,SAAd;AAKD,OAND,MAMO;AACL,aAAKc,QAAL,CAAc;AACZhB,UAAAA,cAAc,EAAEe,MAAM,CAACE,IAAP,CAAY,KAAKxB,KAAL,CAAWM,SAAX,GAAuB,CAAnC,EAAsC,SAAtC,CADJ;AAEZE,UAAAA,UAAU,EAAEc,MAAM,CAACE,IAAP,CAAY,KAAKxB,KAAL,CAAWM,SAAX,GAAuB,CAAnC,EAAsC,UAAtC,CAFA;AAGZG,UAAAA,WAAW,EAAEa,MAAM,CAACE,IAAP,CAAY,KAAKxB,KAAL,CAAWM,SAAX,GAAuB,CAAnC,EAAsC,UAAtC;AAHD,SAAd;AAKD;AAEF,KAnBH;AAoBD;;AAED0B,EAAAA,aAAa,CAACN,CAAD,EAAI;AAACE,IAAAA;AAAD,GAAJ,EAAa;AACxB,SAAKL,QAAL,CAAc;AACZlB,MAAAA,UAAU,EAAEuB;AADA,KAAd;AAIA,SAAKE,iBAAL,CAAuBF,KAAvB;AAEAV,IAAAA,KAAK,CAACzB,iBAAiB,GAAGmC,KAArB,CAAL,CACCT,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGGG,MAAD,IAAY;AACV;AACA,WAAKC,QAAL,CAAc;AACZZ,QAAAA,aAAa,EAAEW,MAAM,CAACE,IAAP,CAAYS,QADf;AAEZvB,QAAAA,YAAY,EAAEY,MAAM,CAACE,IAAP,CAAYU,OAFd;AAGZtB,QAAAA,aAAa,EAAEU,MAAM,CAACE,IAAP,CAAYW,QAHf;AAIZtB,QAAAA,UAAU,EAAES,MAAM,CAACE,IAAP,CAAYY;AAJZ,OAAd;AAOD,KAZH;AAeD,GArH6B,CAyHhC;AACA;AACA;;;AAEAC,EAAAA,SAAS,CAACT,KAAD,EAAQ;AACjB,WAAQ,GAAEA,KAAM,IAAhB;AACD;;AAKCU,EAAAA,MAAM,GAAG;AAEP,UAAMC,eAAe,GAAG;AAEpBC,MAAAA,KAAK,EAAE;AACLb,QAAAA,IAAI,EAAE;AADD,OAFa;AAMpBc,MAAAA,QAAQ,EAAE;AACRd,QAAAA,IAAI,EAAE;AADE,OANU;AAUpBe,MAAAA,KAAK,EAAE;AACLF,QAAAA,KAAK,EAAE;AACLb,UAAAA,IAAI,EAAE;AADD;AADF,OAVa;AAgBpBgB,MAAAA,KAAK,EAAE;AACLC,QAAAA,aAAa,EAAE;AACbC,UAAAA,gBAAgB,EAAE;AADL;AADV,OAhBa;AAsBpBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAE,UADF;AAENC,QAAAA,KAAK,EAAE,OAFD;AAGNC,QAAAA,aAAa,EAAE;AAHT,OAtBY;AA4BpBC,MAAAA,WAAW,EAAE;AACXC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE;AACLC,YAAAA,gBAAgB,EAAE;AADb,WADD;AAINC,UAAAA,UAAU,EAAE;AAJN;AADG,OA5BO;AAqCpBH,MAAAA,MAAM,EAAE,CAAC;AACPI,QAAAA,IAAI,EAAE,UADC;AAEP/B,QAAAA,IAAI,EAAE,KAAKxB,KAAL,CAAWW;AAFV,OAAD,EAGN;AACA4C,QAAAA,IAAI,EAAE,UADN;AAEA/B,QAAAA,IAAI,EAAE,KAAKxB,KAAL,CAAWY;AAFjB,OAHM,EAMN;AACA2C,QAAAA,IAAI,EAAE,SADN;AAEA/B,QAAAA,IAAI,EAAE,KAAKxB,KAAL,CAAWU;AAFjB,OANM,CArCY;AAgDpB8C,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE,CAAC;AACNC,UAAAA,SAAS,EAAE;AACTC,YAAAA,QAAQ,EAAE;AADD,WADL;AAINC,UAAAA,YAAY,EAAE;AACZd,YAAAA,MAAM,EAAE;AACNC,cAAAA,MAAM,EAAE,YADF;AAENC,cAAAA,KAAK,EAAE,QAFD;AAGNC,cAAAA,aAAa,EAAE;AAHT;AADI;AAJR,SAAD;AADG;AAhDQ,KAAxB;AAiEE,UAAMY,gBAAgB,GAAG;AAEvBrB,MAAAA,KAAK,EAAE;AACLb,QAAAA,IAAI,EAAE;AADD,OAFgB;AAMvBc,MAAAA,QAAQ,EAAE;AACRd,QAAAA,IAAI,EAAE;AADE,OANa;AAUvBe,MAAAA,KAAK,EAAE;AACLF,QAAAA,KAAK,EAAE;AACLb,UAAAA,IAAI,EAAE;AADD;AADF,OAVgB;AAgBvBgB,MAAAA,KAAK,EAAE;AACLC,QAAAA,aAAa,EAAE;AACbC,UAAAA,gBAAgB,EAAE;AADL;AADV,OAhBgB;AAsBvBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAE,UADF;AAENC,QAAAA,KAAK,EAAE,OAFD;AAGNC,QAAAA,aAAa,EAAE;AAHT,OAtBe;AA4BvBC,MAAAA,WAAW,EAAE;AACXC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE;AACLC,YAAAA,gBAAgB,EAAE;AADb,WADD;AAINC,UAAAA,UAAU,EAAE;AAJN;AADG,OA5BU;AAqCvBH,MAAAA,MAAM,EAAE,CAAC;AACPI,QAAAA,IAAI,EAAE,UADC;AAEP/B,QAAAA,IAAI,EAAE,KAAKxB,KAAL,CAAWW;AAFV,OAAD,EAGN;AACA4C,QAAAA,IAAI,EAAE,UADN;AAEA/B,QAAAA,IAAI,EAAE,KAAKxB,KAAL,CAAWY;AAFjB,OAHM,EAMN;AACA2C,QAAAA,IAAI,EAAE,SADN;AAEA/B,QAAAA,IAAI,EAAE,KAAKxB,KAAL,CAAWU;AAFjB,OANM,CArCe;AAgDvB8C,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE,CAAC;AACNC,UAAAA,SAAS,EAAE;AACTC,YAAAA,QAAQ,EAAE;AADD,WADL;AAINC,UAAAA,YAAY,EAAE;AACZd,YAAAA,MAAM,EAAE;AACNC,cAAAA,MAAM,EAAE,YADF;AAENC,cAAAA,KAAK,EAAE,QAFD;AAGNC,cAAAA,aAAa,EAAE;AAHT;AADI;AAJR,SAAD;AADG;AAhDW,KAAzB;AAoEH,UAAM;AAAEhD,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAqB,KAAKF,KAAhC;AAEC,UAAMI,YAAY,GAAG,KAAKJ,KAAL,CAAWG,MAAX,CAAkBsB,GAAlB,CAAuBC,CAAD,IAAO;AAC1C,aAAO;AAACC,QAAAA,IAAI,EAAED,CAAP;AAAUoC,QAAAA,GAAG,EAAEpC,CAAf;AAAkBE,QAAAA,KAAK,EAAEF;AAAzB,OAAP;AACD,KAFc,CAArB;AAKA,UAAMqC,KAAK,GAAG,CACZ;AACEnC,MAAAA,KAAK,EAAE,CADT;AAEEwB,MAAAA,KAAK,EAAE;AAFT,KADY,EAKZ;AACExB,MAAAA,KAAK,EAAE,EADT;AAEEwB,MAAAA,KAAK,EAAE;AAFT,KALY,CAAd;AAYA,UAAMY,sBAAsB,GAC1B,oBAAC,KAAD;AAAO,MAAA,MAAM,MAAb;AAAc,MAAA,UAAU,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADF,CADF,EAQE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,OAAO,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,KAAKhE,KAAL,CAAWO,cAAX,CAA0B,CAA1B,CAAb,CAFF,CADF,EAKE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,KAAKP,KAAL,CAAWO,cAAX,CAA0B,CAA1B,CAAb,CADJ,CALF,EAQE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,KAAKP,KAAL,CAAWO,cAAX,CAA0B,CAA1B,CAAb,CADJ,CARF,EAYE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,OAAO,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,SAAS,KAAKP,KAAL,CAAWK,UAA7C,CADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,KAAKL,KAAL,CAAWQ,UAAX,CAAsB,CAAtB,CAAb,CAFF,CAZF,EAgBE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,KAAKR,KAAL,CAAWQ,UAAX,CAAsB,CAAtB,CAAb,CADJ,CAhBF,EAmBE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,KAAKR,KAAL,CAAWS,WAAX,CAAuB,CAAvB,CAAb,CADJ,CAnBF,EAuBE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,IAAP;AAAY,MAAA,OAAO,EAAC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyB,UAAU,KAAKT,KAAL,CAAWK,UAA9C,CADF,EAEE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,KAAKL,KAAL,CAAWS,WAAX,CAAuB,CAAvB,CAAb,CAFF,CAvBF,EA2BE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,KAAKT,KAAL,CAAWS,WAAX,CAAuB,CAAvB,CAAb,CADJ,CA3BF,EA8BE,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAa,KAAKT,KAAL,CAAWS,WAAX,CAAuB,CAAvB,CAAb,CADJ,CA9BF,CARF,CADF;;AAoDA,QAAIR,KAAJ,EAAW;AACT,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACgE,OAAnB,CAAP;AACD,KAFD,MAEO,IAAI/D,QAAJ,EAAc;AACnB,aAAO;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,KAFM,MAEA;AACN,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAIG,oBAAC,MAAD,CAAQ,KAAR;AAAc,QAAA,IAAI,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAEgE,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAME,oBAAC,MAAD,CAAQ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAEF,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAPF,CAJH,EAmBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAnBH,EAsBG,oBAAC,QAAD;AACE,QAAA,WAAW,EAAC,cADd;AAEE,QAAA,SAAS,EAAC,WAFZ;AAGE,QAAA,KAAK,MAHP;AAIE,QAAA,MAAM,MAJR;AAKE,QAAA,SAAS,MALX;AAME,QAAA,OAAO,EAAEhE,YANX;AAOE,QAAA,QAAQ,EAAE,KAAK4B,aAAL,CAAmBjB,IAAnB,CAAwB,IAAxB,CAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtBH,EAiCG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjCH,EAkCG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlCH,EAmCG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnCH,EAoCG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApCH,EAuCG;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,QAAlB;AACA,QAAA,QAAQ,EAAE,KAAKD,aADf;AAEA,QAAA,gBAAgB,EAAE,KAAKuB,SAFvB;AAGA,QAAA,iBAAiB,EAAC,IAHlB;AAIA,QAAA,GAAG,EAAE,EAJL;AAKA,QAAA,GAAG,EAAE,CALL;AAMA,QAAA,KAAK,EAAE0B,KANP;AAOA,QAAA,YAAY,EAAE,KAAK/D,KAAL,CAAWM,SAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAvCH,EAmDM0D,sBAnDN,EAsDG,oBAAC,eAAD;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,UAAU,EAAE3E,UAFd;AAGE,QAAA,OAAO,EAAEkD,eAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtDH,EA2DG,oBAAC,eAAD;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,UAAU,EAAElD,UAFd;AAGE,QAAA,OAAO,EAAEwE,gBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3DH,CADJ;AAmED;AACF;;AA3ZgC;;AA8ZlC,eAAejE,GAAf","sourcesContent":["import React from \"react\";\nimport Sidebar from \"react-sidebar\";\nimport { Container, Row, Col } from 'reactstrap';\nimport { ResponsiveLine } from '@nivo/line'\nimport { ResponsiveBar } from '@nivo/bar'\nimport { ResponsivePieCanvas } from '@nivo/pie'\nimport './Demo.css'\nimport GaugeChart from 'react-gauge-chart'\nimport Thermometer from 'react-thermometer-component'\n// import Slider, { Range } from 'rc-slider'; \n// import 'rc-slider/assets/index.css';\nimport Slider from '@material-ui/core/Slider';\nimport { Button, Input, Dropdown, Table } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\n\nvar APIUrl_get_curr_topics = 'http://127.0.0.1:8000/get_curr_topics';\nvar APIUrl_get_daily_sample = 'http://127.0.0.1:8000/get_daily_sample';\nvar APIUrl_get_result = 'http://127.0.0.1:8000/get_result/';\nvar beginDate = '01242020';\nvar endDate = '02162020';\n\n\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \terror: null,\n    \tisLoaded: false,\n    \ttopics: [],\n      topicOptions: [],\n      curr_topic: '',\n      sliderVal: 1,\n      neutral_sample: [],\n      pro_sample: [],\n      anti_sample: [],\n      neutral_list: [],\n      positive_list: [],\n      negative_list: [],\n      total_list: [],\n    };\n    this.sliderHandler = this.sliderHandler.bind(this);\n    this.sliderTxtHandler = this.sliderTxtHandler.bind(this);\n\n  }\n\n  componentDidMount() {\n  \tfetch(APIUrl_get_curr_topics)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          topics: result.data,\n          topicOptions: result.data.map((e) => {\n            return {text: e};\n          })\n        })\n      });\n\n    }\n  \n\n    sliderHandler(e, value) {\n      this.setState({\n        sliderVal: value,\n      });\n      // console.log(value);\n      if(this.state.curr_topic == '') {\n        return\n      }\n      fetch(APIUrl_get_daily_sample + '/' + this.state.curr_topic)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          if(result.data.length < value) {\n            this.setState({\n              neutral_sample: '',\n              pro_sample: '',\n              anti_sample: '',\n            })\n          } else {\n            this.setState({\n              neutral_sample: result.data[value - 1]['neutral'],\n              pro_sample: result.data[value - 1]['positive'],\n              anti_sample: result.data[value - 1]['negative'],\n            })\n          }\n        });\n    }\n\n    sliderTxtHandler(e) {\n      \n    }\n\n\n    fetch_sample_data(topic) {\n      fetch(APIUrl_get_daily_sample + '/' + topic)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          // console.log(result.data.length , this.state.sliderVal)\n          if(result.data.length < this.state.sliderVal) {\n            this.setState({\n              neutral_sample: '',\n              pro_sample: '',\n              anti_sample: '',\n            })\n          } else {\n            this.setState({\n              neutral_sample: result.data[this.state.sliderVal - 1]['neutral'],\n              pro_sample: result.data[this.state.sliderVal - 1]['positive'],\n              anti_sample: result.data[this.state.sliderVal - 1]['negative'],\n            })\n          }\n          \n        });\n    }\n\n    changeHandler(e, {value}) {\n      this.setState({\n        curr_topic: value,\n      })\n\n      this.fetch_sample_data(value);\n\n      fetch(APIUrl_get_result + value)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          // console.log(result.data.length , this.state.sliderVal)\n          this.setState({\n            positive_list: result.data.positive,\n            neutral_list: result.data.neutral,\n            negative_list: result.data.negative,\n            total_list: result.data.total,\n          })\n          \n        });\n\n\n    }\n\n  \n\n  // dateParser(date) {\n  // \treturn date.slice(0, 2) + '-' + date.slice(2, 4) + '-' + date.slice(4,8);\n  // }\n\n  valuetext(value) {\n  return `${value}Â°C`;\n}\n\n\n    \n\n  render() {\n\n    const activityOptions = {\n\n        title: {\n          text: 'Activity by hours'\n        },\n\n        subtitle: {\n          text: 'Source: Twitter'\n        },\n\n        yAxis: {\n          title: {\n            text: 'Number of Posts'\n          }\n        },\n\n        xAxis: {\n          accessibility: {\n            rangeDescription: 'Range: 2010 to 2017'\n          }\n        },\n\n        legend: {\n          layout: 'vertical',\n          align: 'right',\n          verticalAlign: 'middle'\n        },\n\n        plotOptions: {\n          series: {\n            label: {\n              connectorAllowed: false\n            },\n            pointStart: 0\n          }\n        },\n\n        series: [{\n          name: 'Positive',\n          data: this.state.positive_list,\n        },{\n          name: 'Negative',\n          data: this.state.negative_list,\n        },{\n          name: 'Neutral',\n          data: this.state.neutral_list,\n        }],\n\n        responsive: {\n          rules: [{\n            condition: {\n              maxWidth: 500\n            },\n            chartOptions: {\n              legend: {\n                layout: 'horizontal',\n                align: 'center',\n                verticalAlign: 'bottom'\n              }\n            }\n          }]\n        }\n\n      };\n\n      const sentimentOptions = {\n\n        title: {\n          text: 'Activity by hours'\n        },\n\n        subtitle: {\n          text: 'Source: Twitter'\n        },\n\n        yAxis: {\n          title: {\n            text: 'Number of Posts'\n          }\n        },\n\n        xAxis: {\n          accessibility: {\n            rangeDescription: 'Range: 2010 to 2017'\n          }\n        },\n\n        legend: {\n          layout: 'vertical',\n          align: 'right',\n          verticalAlign: 'middle'\n        },\n\n        plotOptions: {\n          series: {\n            label: {\n              connectorAllowed: false\n            },\n            pointStart: 0\n          }\n        },\n\n        series: [{\n          name: 'Positive',\n          data: this.state.positive_list,\n        },{\n          name: 'Negative',\n          data: this.state.negative_list,\n        },{\n          name: 'Neutral',\n          data: this.state.neutral_list,\n        }],\n\n        responsive: {\n          rules: [{\n            condition: {\n              maxWidth: 500\n            },\n            chartOptions: {\n              legend: {\n                layout: 'horizontal',\n                align: 'center',\n                verticalAlign: 'bottom'\n              }\n            }\n          }]\n        }\n\n      };\n\n\n\n\n  \tconst { error, isLoaded} = this.state;\n\n    const topicOptions = this.state.topics.map((e) => {\n            return {text: e, key: e, value: e};\n          })\n\n\n    const marks = [\n      {\n        value: 1,\n        label: '1st Day',\n      },\n      {\n        value: 15,\n        label: '15th Day',\n      },\n    ];\n\n\n    const TableExampleDefinition = (\n      <Table celled structured>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Beliefs</Table.HeaderCell>\n            <Table.HeaderCell>Sample Tweets</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell rowSpan='3'>Neutral</Table.Cell>            \n            <Table.Cell>{this.state.neutral_sample[0]}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n              <Table.Cell>{this.state.neutral_sample[1]}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n              <Table.Cell>{this.state.neutral_sample[2]}</Table.Cell>\n          </Table.Row>\n\n          <Table.Row>\n            <Table.Cell rowSpan='3'>{'Pro-' + this.state.curr_topic}</Table.Cell>            \n            <Table.Cell>{this.state.pro_sample[0]}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n              <Table.Cell>{this.state.pro_sample[1]}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n              <Table.Cell>{this.state.anti_sample[2]}</Table.Cell>\n          </Table.Row>\n\n          <Table.Row>\n            <Table.Cell rowSpan='3'>{'Anti-' + this.state.curr_topic}</Table.Cell>            \n            <Table.Cell>{this.state.anti_sample[0]}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n              <Table.Cell>{this.state.anti_sample[1]}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n              <Table.Cell>{this.state.anti_sample[2]}</Table.Cell>\n          </Table.Row>\n\n        </Table.Body>\n      </Table>\n      );\n\n\n\n\n\n\n  \t if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (isLoaded) {\n      return <div className='display'>Loading...</div>;\n    } else {\n\t    return (\n\t        <div className='display'>\n            <br/>\n\n\n            <Button.Group size='large'>\n              <Link to={process.env.PUBLIC_URL + \"/Realtime\"}>\n                <Button>\n                  Realtime\n                </Button>\n              </Link>\n              <Button.Or />\n              <Link to={process.env.PUBLIC_URL + \"/Demo\"}>\n                <Button>\n                  Demo\n                </Button>\n              </Link>\n            </Button.Group>\n\n\n            <h1>Choose a topic!</h1>\n\n\n            <Dropdown\n              placeholder='Select Topic'\n              className='topic-box'\n              fluid\n              search\n              selection\n              options={topicOptions}\n              onChange={this.changeHandler.bind(this)}\n            />\n\n\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n\n\n            <div className='date-slider'>\n                <Slider className='slider'\n                onChange={this.sliderHandler}\n                getAriaValueText={this.valuetext}\n                valueLabelDisplay=\"on\"\n                max={15}\n                min={1}\n                marks={marks}\n                defaultValue={this.state.sliderVal}/>\n              </div>\n\n\n              {TableExampleDefinition}\n\n\n            <HighchartsReact\n              className='topic-box'\n              highcharts={Highcharts}\n              options={activityOptions}\n            />\n            <HighchartsReact\n              className='topic-box'\n              highcharts={Highcharts}\n              options={sentimentOptions}\n            />\n\t        </div>\n\t    );\n\t  }\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}