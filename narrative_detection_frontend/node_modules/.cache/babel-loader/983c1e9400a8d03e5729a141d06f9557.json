{"ast":null,"code":"import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Sidebar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n\n    return cancelDistanceOnScroll;\n  };\n\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n\n        return this.state.sidebarWidth;\n      }\n\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n\n  return Sidebar;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\nexport default Sidebar;","map":{"version":3,"sources":["/Users/jad/node_modules/react-sidebar/dist/react-sidebar.esm.js"],"names":["_objectSpread","_inheritsLoose","_assertThisInitialized","React","Component","PropTypes","CANCEL_DISTANCE_ON_SCROLL","defaultStyles","root","position","top","left","right","bottom","overflow","sidebar","zIndex","transition","WebkitTransition","willChange","overflowY","content","WebkitOverflowScrolling","overlay","opacity","visibility","backgroundColor","dragHandle","Sidebar","_Component","props","_this","call","state","sidebarWidth","defaultSidebarWidth","touchIdentifier","touchStartX","touchCurrentX","dragSupported","overlayClicked","bind","onTouchStart","onTouchMove","onTouchEnd","onScroll","saveSidebarRef","_proto","prototype","componentDidMount","isIos","test","navigator","userAgent","setState","window","saveSidebarWidth","componentDidUpdate","isTouching","ev","touch","targetTouches","identifier","clientX","ind","length","touchWidth","touchSidebarWidth","open","dragToggleDistance","onSetOpen","inCancelDistanceOnScroll","cancelDistanceOnScroll","pullRight","Math","abs","width","offsetWidth","node","innerWidth","min","render","sidebarStyle","styles","contentStyle","overlayStyle","useTouch","rootProps","className","rootClassName","style","role","id","rootId","hasBoxShadow","shadow","docked","transform","WebkitTransform","boxShadow","percentage","transitions","onTouchCancel","dragHandleStyle","touchHandleWidth","createElement","sidebarClassName","ref","sidebarId","overlayClassName","onClick","overlayId","contentClassName","contentId","children","process","env","NODE_ENV","propTypes","isRequired","shape","object","string","bool","number","func","defaultProps"],"mappings":"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","sourcesContent":["import _objectSpread from '@babel/runtime/helpers/objectSpread';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\nvar defaultStyles = {\n  root: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: \"hidden\"\n  },\n  sidebar: {\n    zIndex: 2,\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    transition: \"transform .3s ease-out\",\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\n    willChange: \"transform\",\n    overflowY: \"auto\"\n  },\n  content: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflowY: \"auto\",\n    WebkitOverflowScrolling: \"touch\",\n    transition: \"left .3s ease-out, right .3s ease-out\"\n  },\n  overlay: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: \"hidden\",\n    transition: \"opacity .3s ease-out, visibility .3s ease-out\",\n    backgroundColor: \"rgba(0,0,0,.3)\"\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: \"fixed\",\n    top: 0,\n    bottom: 0\n  }\n};\n\nvar Sidebar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Sidebar, _Component);\n\n  function Sidebar(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: props.defaultSidebarWidth,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchCurrentX: null,\n      // if touch is supported by the browser\n      dragSupported: false\n    };\n    _this.overlayClicked = _this.overlayClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchStart = _this.onTouchStart.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchMove = _this.onTouchMove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTouchEnd = _this.onTouchEnd.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveSidebarRef = _this.saveSidebarRef.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  var _proto = Sidebar.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var isIos = /iPad|iPhone|iPod/.test(navigator ? navigator.userAgent : \"\");\n    this.setState({\n      dragSupported: typeof window === \"object\" && \"ontouchstart\" in window && !isIos\n    });\n    this.saveSidebarWidth();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  };\n\n  _proto.onTouchStart = function onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      var touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchCurrentX: touch.clientX\n      });\n    }\n  };\n\n  _proto.onTouchMove = function onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX\n          });\n          break;\n        }\n      }\n    }\n  };\n\n  _proto.onTouchEnd = function onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      var touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance || !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n  _proto.onScroll = function onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchCurrentX: null\n      });\n    }\n  }; // True if the on going gesture X distance is less than the cancel distance\n\n\n  _proto.inCancelDistanceOnScroll = function inCancelDistanceOnScroll() {\n    var cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n    }\n\n    return cancelDistanceOnScroll;\n  };\n\n  _proto.isTouching = function isTouching() {\n    return this.state.touchIdentifier !== null;\n  };\n\n  _proto.overlayClicked = function overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  };\n\n  _proto.saveSidebarWidth = function saveSidebarWidth() {\n    var width = this.sidebar.offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({\n        sidebarWidth: width\n      });\n    }\n  };\n\n  _proto.saveSidebarRef = function saveSidebarRef(node) {\n    this.sidebar = node;\n  }; // calculate the sidebarWidth based on current touch info\n\n\n  _proto.touchSidebarWidth = function touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n\n        return this.state.sidebarWidth;\n      }\n\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  };\n\n  _proto.render = function render() {\n    var sidebarStyle = _objectSpread({}, defaultStyles.sidebar, this.props.styles.sidebar);\n\n    var contentStyle = _objectSpread({}, defaultStyles.content, this.props.styles.content);\n\n    var overlayStyle = _objectSpread({}, defaultStyles.overlay, this.props.styles.overlay);\n\n    var useTouch = this.state.dragSupported && this.props.touch;\n    var isTouching = this.isTouching();\n    var rootProps = {\n      className: this.props.rootClassName,\n      style: _objectSpread({}, defaultStyles.root, this.props.styles.root),\n      role: \"navigation\",\n      id: this.props.rootId\n    };\n    var dragHandle;\n    var hasBoxShadow = this.props.shadow && (isTouching || this.props.open || this.props.docked); // sidebarStyle right/left\n\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = \"translateX(100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"-2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = \"translateX(-100%)\";\n      sidebarStyle.WebkitTransform = \"translateX(-100%)\";\n\n      if (hasBoxShadow) {\n        sidebarStyle.boxShadow = \"2px 2px 4px rgba(0, 0, 0, 0.15)\";\n      }\n    }\n\n    if (isTouching) {\n      var percentage = this.touchSidebarWidth() / this.state.sidebarWidth; // slide open to what we dragged\n\n      if (this.props.pullRight) {\n        sidebarStyle.transform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(\" + (1 - percentage) * 100 + \"%)\";\n      } else {\n        sidebarStyle.transform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n        sidebarStyle.WebkitTransform = \"translateX(-\" + (1 - percentage) * 100 + \"%)\";\n      } // fade overlay to match distance of drag\n\n\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = \"visible\";\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = \"translateX(0%)\";\n        sidebarStyle.WebkitTransform = \"translateX(0%)\";\n      } // make space on the left/right side of the content for the sidebar\n\n\n      if (this.props.pullRight) {\n        contentStyle.right = this.state.sidebarWidth + \"px\";\n      } else {\n        contentStyle.left = this.state.sidebarWidth + \"px\";\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = \"translateX(0%)\";\n      sidebarStyle.WebkitTransform = \"translateX(0%)\"; // show overlay\n\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = \"visible\";\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = \"none\";\n      sidebarStyle.WebkitTransition = \"none\";\n      contentStyle.transition = \"none\";\n      overlayStyle.transition = \"none\";\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        var dragHandleStyle = _objectSpread({}, defaultStyles.dragHandle, this.props.styles.dragHandle);\n\n        dragHandleStyle.width = this.props.touchHandleWidth; // dragHandleStyle right/left\n\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = React.createElement(\"div\", {\n          style: dragHandleStyle,\n          onTouchStart: this.onTouchStart,\n          onTouchMove: this.onTouchMove,\n          onTouchEnd: this.onTouchEnd,\n          onTouchCancel: this.onTouchEnd\n        });\n      }\n    }\n\n    return React.createElement(\"div\", rootProps, React.createElement(\"div\", {\n      className: this.props.sidebarClassName,\n      style: sidebarStyle,\n      ref: this.saveSidebarRef,\n      id: this.props.sidebarId\n    }, this.props.sidebar), React.createElement(\"div\", {\n      className: this.props.overlayClassName,\n      style: overlayStyle,\n      onClick: this.overlayClicked,\n      id: this.props.overlayId\n    }), React.createElement(\"div\", {\n      className: this.props.contentClassName,\n      style: contentStyle,\n      id: this.props.contentId\n    }, dragHandle, this.props.children));\n  };\n\n  return Sidebar;\n}(Component);\n\nprocess.env.NODE_ENV !== \"production\" ? Sidebar.propTypes = {\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  styles: PropTypes.shape({\n    root: PropTypes.object,\n    sidebar: PropTypes.object,\n    content: PropTypes.object,\n    overlay: PropTypes.object,\n    dragHandle: PropTypes.object\n  }),\n  // root component optional class\n  rootClassName: PropTypes.string,\n  // sidebar optional class\n  sidebarClassName: PropTypes.string,\n  // content optional class\n  contentClassName: PropTypes.string,\n  // overlay optional class\n  overlayClassName: PropTypes.string,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  // max distance from the edge we can start touching\n  touchHandleWidth: PropTypes.number,\n  // Place the sidebar on the right\n  pullRight: PropTypes.bool,\n  // Enable/Disable sidebar shadow\n  shadow: PropTypes.bool,\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onSetOpen: PropTypes.func,\n  // Initial sidebar width when page loads\n  defaultSidebarWidth: PropTypes.number,\n  // root component optional id\n  rootId: PropTypes.string,\n  // sidebar optional id\n  sidebarId: PropTypes.string,\n  // content optional id\n  contentId: PropTypes.string,\n  // overlay optional id\n  overlayId: PropTypes.string\n} : void 0;\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: function onSetOpen() {},\n  styles: {},\n  defaultSidebarWidth: 0\n};\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}